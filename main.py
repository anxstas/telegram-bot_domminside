import telebot
from telebot import types
import openai
import logging
import os
import random
import time
from datetime import datetime, timedelta
from flask import Flask, request
import threading

app = Flask(__name__)

@app.route('/')
def keep_alive():
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    print(f"[{now}] üíì Keep-alive ping received.")
    return '–ë–æ—Ç –∂–∏–≤!'


TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
openai.api_key = os.getenv("OPENAI_API_KEY")
ADMIN_ID = 513201869
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
WEBHOOK_PORT = int(os.getenv("PORT", "10000"))

bot = telebot.TeleBot(TELEGRAM_TOKEN)
logging.basicConfig(level=logging.INFO)
user_state = {}

user_selected_slots = {}

def get_next_slots():
    today = datetime.now()
    slots = []
    schedule = {
        3: ["09:00", "12:00"],
        4: ["09:00", "10:00", "12:00"],
        6: ["13:00", "15:00"],
    }
    for i in range(1, 10):
        day = today + timedelta(days=i)
        wd = day.weekday()
        if wd in schedule:
            for t in schedule[wd]:
                dt_obj = datetime.strptime(f"{day.strftime('%Y-%m-%d')} {t}", "%Y-%m-%d %H:%M")
                label = f"{day.strftime('%a %d %b')} ‚Ä¢ {t}"
                slots.append((label, dt_obj))
    return slots

def human_delay():
    time.sleep(random.uniform(1.2, 2.5))

def persistent_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add('üü° –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ -40%')
    markup.add('ü§ø –ü–æ–π—Ç–∏ –≥–ª—É–±–∂–µ', 'üÜò –°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å')
    markup.add('üßû‚Äç‚ôÇÔ∏è –¢–µ—Å—Ç —Ç—Ä–µ–≤–æ–≥–∏', 'üßû‚Äç‚ôÄÔ∏è –¢–µ—Å—Ç –¥–µ–ø—Ä–µ—Å—Å–∏–∏') 
    return markup

# --- –í–æ–ø—Ä–æ—Å—ã GAD-7 –∏ PHQ-9 ---
gad7_questions = [
    "–ß—É–≤—Å—Ç–≤–æ –Ω–µ—Ä–≤–æ–∑–Ω–æ—Å—Ç–∏, —Ç—Ä–µ–≤–æ–≥–∏ –∏–ª–∏ —Å–∏–ª—å–Ω–æ–≥–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è",
    "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–≤–æ–∂–Ω—ã–µ –º—ã—Å–ª–∏",
    "–ß—Ä–µ–∑–º–µ—Ä–Ω–æ–µ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –ø–æ–≤–æ–¥–∞–º",
    "–ó–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è –ø—Ä–∏ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–∏",
    "–ë–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ –Ω–∞—Å—Ç–æ–ª—å–∫–æ —Å–∏–ª—å–Ω–æ–µ, —á—Ç–æ —Å–ª–æ–∂–Ω–æ —Å–∏–¥–µ—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ",
    "–†–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–ª–∏ –ª–µ–≥–∫–æ–µ —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ",
    "–ß—É–≤—Å—Ç–≤–æ —Å—Ç—Ä–∞—Ö–∞, —á—Ç–æ –º–æ–∂–µ—Ç —Å–ª—É—á–∏—Ç—å—Å—è —á—Ç–æ-—Ç–æ —É–∂–∞—Å–Ω–æ–µ"
]

phq9_questions = [
    "–ú–∞–ª–µ–Ω—å–∫–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∏–ª–∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–ª",
    "–ß—É–≤—Å—Ç–≤–æ –ø–æ–¥–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç–∏, –¥–µ–ø—Ä–µ—Å—Å–∏–∏ –∏–ª–∏ –±–µ–∑—ã—Å—Ö–æ–¥–Ω–æ—Å—Ç–∏",
    "–ó–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏–µ —Å–æ —Å–Ω–æ–º –∏–ª–∏ –∏–∑–±—ã—Ç–æ—á–Ω—ã–π —Å–æ–Ω",
    "–ß—É–≤—Å—Ç–≤–æ —É—Å—Ç–∞–ª–æ—Å—Ç–∏ –∏–ª–∏ –Ω–µ—Ö–≤–∞—Ç–∫–∏ —ç–Ω–µ—Ä–≥–∏–∏",
    "–ü—Ä–æ–±–ª–µ–º—ã —Å –∞–ø–ø–µ—Ç–∏—Ç–æ–º ‚Äî —Å–Ω–∏–∂–µ–Ω–∏–µ –∏–ª–∏ –ø–µ—Ä–µ–µ–¥–∞–Ω–∏–µ",
    "–ü–ª–æ—Ö–æ–µ –º–Ω–µ–Ω–∏–µ –æ —Å–µ–±–µ, —á—É–≤—Å—Ç–≤–æ –≤–∏–Ω—ã –∏–ª–∏ –Ω–∏–∫—á–µ–º–Ω–æ—Å—Ç–∏",
    "–¢—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –¢–í)",
    "–ó–∞–º–µ–¥–ª–µ–Ω–Ω–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏–π –∏–ª–∏, –Ω–∞–æ–±–æ—Ä–æ—Ç, —Å—É–µ—Ç–ª–∏–≤–æ—Å—Ç—å",
    "–ú—ã—Å–ª–∏ –æ —Ç–æ–º, —á—Ç–æ –ª—É—á—à–µ –±—ã –Ω–µ –∂–∏—Ç—å –∏–ª–∏ –Ω–∞–Ω–µ—Å—Ç–∏ —Å–µ–±–µ –≤—Ä–µ–¥"
]

# --- –£—Ä–æ–≤–Ω–∏ –æ—Ü–µ–Ω–∫–∏ ---
gad7_levels = [
    (0, 4, "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å"),
    (5, 9, "–õ–µ–≥–∫–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å"),
    (10, 14, "–£–º–µ—Ä–µ–Ω–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å"),
    (15, 21, "–¢—è–∂–µ–ª–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å")
]

phq9_levels = [
    (0, 4, "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è"),
    (5, 9, "–õ–µ–≥–∫–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è"),
    (10, 14, "–£–º–µ—Ä–µ–Ω–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è"),
    (15, 19, "–£–º–µ—Ä–µ–Ω–Ω–æ-—Ç—è–∂–µ–ª–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è"),
    (20, 27, "–¢—è–∂–µ–ª–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è")
]

# --- –†–ê–°–®–ò–§–†–û–í–ö–ê –£–†–û–í–ù–ï–ô GAD-7 ---
anxiety_descriptions = {
    "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å": (
        "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —É—Å—Ç–æ–π—á–∏–≤–æ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –≠—Ç–æ –Ω–µ –æ–∑–Ω–∞—á–∞–µ—Ç –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–≤–æ–≥–∏, –Ω–æ –æ–Ω–∞ –Ω–µ –º–µ—à–∞–µ—Ç –≤–∞–º –∂–∏—Ç—å."
        " –ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —ç—Ç–æ—Ç –±–∞–ª–∞–Ω—Å: –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —É–¥–µ–ª—è—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –æ—Ç–¥—ã—Ö—É, —Å–Ω—É –∏ —Ä–µ—Å—É—Ä—Å–Ω—ã–º –∑–∞–Ω—è—Ç–∏—è–º. –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ —Å–ø–æ—Å–æ–±–∞—Ö –∑–∞–±–æ—Ç—ã –æ —Å–µ–±–µ."
    ),
    "–õ–µ–≥–∫–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å": (
        "–¢—Ä–µ–≤–æ–≥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω–æ –ø–æ–∫–∞ –Ω–µ –º–µ—à–∞–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–µ–ª–∞."
        " –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ —á–∞—Å—Ç—É—é —É—Å—Ç–∞–ª–æ—Å—Ç—å, —Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ."
        " –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–∏–≥–Ω–∞–ª—ã —Ç–µ–ª–∞ –∏ –¥–∞–π—Ç–µ —Å–µ–±–µ —Ä–µ–≥—É–ª—è—Ä–Ω—É—é –ø–µ—Ä–µ–¥—ã—à–∫—É. –í–∞–∂–Ω–æ –ø—Ä–∏—Å–ª—É—à–∞—Ç—å—Å—è –∫ —Å–µ–±–µ."
    ),
    "–£–º–µ—Ä–µ–Ω–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å": (
        "–¢—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç —Å–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ –∂–∏–∑–Ω–∏ ‚Äî –ø–æ—è–≤–ª—è—é—Ç—Å—è –Ω–∞—Ä—É—à–µ–Ω–∏—è —Å–Ω–∞, —Ä–∞—Å—Å–µ—è–Ω–Ω–æ—Å—Ç—å, —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω–æ—Å—Ç—å."
        " –≠—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–æ–π—á–∏–≤—ã–º, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∏ –Ω–µ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å."
        " –ü–æ–¥—É–º–∞–π—Ç–µ –æ —Ç–æ–º, —á—Ç–æ–±—ã –æ–±—Å—É–¥–∏—Ç—å —ç—Ç–æ —Å –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–æ–º –∏ –Ω–∞—á–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏. –ù–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ."
    ),
    "–¢—è–∂–µ–ª–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å": (
        "–°–∏–ª—å–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∞—à–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, —Å–æ–Ω, —Ç–µ–ª–æ, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –∏ –æ–±—â–µ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ."
        " –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ, –¥–∞–∂–µ –±–µ–∑ –æ—á–µ–≤–∏–¥–Ω–æ–π –ø—Ä–∏—á–∏–Ω—ã."
        " –°–µ–π—á–∞—Å –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –Ω–µ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π ‚Äî —ç—Ç–æ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å. –ó–∞–π–º–∏—Ç–µ—Å—å —Å–æ–±–æ–π —Å–µ–π—á–∞—Å."
    )
}


# --- –†–ê–°–®–ò–§–†–û–í–ö–ê –£–†–û–í–ù–ï–ô PHQ-9 ---
depression_descriptions = {
    "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è": (
        "–°–∏–º–ø—Ç–æ–º—ã –¥–µ–ø—Ä–µ—Å—Å–∏–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –≤—ã—Ä–∞–∂–µ–Ω—ã —Å–ª–∞–±–æ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
        " –≠—Ç–æ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∏ –µ–≥–æ —Å—Ç–æ–∏—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å: —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ–Ω, –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è."
        " –ï—Å–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ —á—Ç–æ-—Ç–æ —Ü–µ–ø–ª—è–µ—Ç ‚Äî –Ω–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ, –ª—É—á—à–µ –æ–±—Å—É–¥–∏—Ç–µ —Å –∫–µ–º-—Ç–æ. –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ —Å–ø–æ—Å–æ–±–∞—Ö –∑–∞–±–æ—Ç—ã –æ —Å–µ–±–µ."
    ),
    "–õ–µ–≥–∫–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è": (
        "–í –≤–∞—à–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Ñ–æ–Ω–µ –∑–∞–º–µ—Ç–Ω—ã —Å–Ω–∏–∂–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ç–æ–Ω—É—Å–∞."
        " –¢–∞–∫–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ª–µ–≥–∫–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å, –Ω–æ –∏–º–µ–Ω–Ω–æ –æ–Ω–∏ –º–æ–≥—É—Ç –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å—Å—è –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è —Ñ–æ–Ω–æ–º."
        " –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –∑–∞–±–æ—Ç—É –æ —Å–µ–±–µ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±—Å—É–¥–∏—Ç—å —ç—Ç–æ —Å –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–æ–º. –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ —Å–ø–æ—Å–æ–±–∞—Ö –∑–∞–±–æ—Ç—ã."
    ),
    "–£–º–µ—Ä–µ–Ω–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è": (
        "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–º–µ—á–∞—Ç—å –∞–ø–∞—Ç–∏—é, —É—Å—Ç–∞–ª–æ—Å—Ç—å, —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–µ–π. –í–∞–∂–Ω–æ –ø—Ä–∏—Å–ª—É—à–∞—Ç—å—Å—è –∫ —Å–µ–±–µ."
        " –≠—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–∂–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∞—à–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –∏ —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è."
        " –ù–µ –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –≤ –Ω—ë–º –æ–¥–Ω–∏ ‚Äî –ø–æ–º–æ—â—å –≤–æ–∑–º–æ–∂–Ω–∞, –∏ —à–∞–≥–æ–º –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–≥–æ–≤–æ—Ä –æ–± —ç—Ç–æ–º."
    ),
    "–£–º–µ—Ä–µ–Ω–Ω–æ-—Ç—è–∂–µ–ª–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è": (
        "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ç—è–∂—ë–ª—ã–º: –≤—ã —Ç–µ—Ä—è–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –∂–∏–∑–Ω–∏, –ø–æ—è–≤–ª—è–µ—Ç—Å—è –æ—â—É—â–µ–Ω–∏–µ –±–µ—Å–ø–æ–º–æ—â–Ω–æ—Å—Ç–∏."
        " –≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–∞—è —É—Å—Ç–∞–ª–æ—Å—Ç—å ‚Äî —ç—Ç–æ —Å–∏–≥–Ω–∞–ª –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏."
        " –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é ‚Äî —ç—Ç–æ —É–∂–µ —à–∞–≥ –∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é. –ù–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ."
    ),
    "–¢—è–∂–µ–ª–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è": (
        "–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä—å—ë–∑–Ω–æ–µ, —Å –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã–º —Å–Ω–∏–∂–µ–Ω–∏–µ–º –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞, —ç–Ω–µ—Ä–≥–∏–∏ –∏ –º—ã—à–ª–µ–Ω–∏—è."
        " –¢–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç —É—á–∞—Å—Ç–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º."
        " –≠—Ç–æ –Ω–µ —Å–ª–∞–±–æ—Å—Ç—å –∏ –Ω–µ –ø—Ä–∏–≥–æ–≤–æ—Ä ‚Äî —ç—Ç–æ –ª–µ—á–∏—Ç—Å—è, –∏ –≤—ã –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ –Ω–∞ –ø–æ–º–æ—â—å. –ó–∞–π–º–∏—Ç–µ—Å—å —Å–æ–±–æ–π —Å–µ–π—á–∞—Å."
    )
}

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ---
user_gad7_state = {}
user_phq9_state = {}

# --- –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
user_gad7_state = {}

# --- –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ ---
@bot.message_handler(func=lambda msg: msg.text.strip() == 'üßû‚Äç‚ôÇÔ∏è –¢–µ—Å—Ç —Ç—Ä–µ–≤–æ–≥–∏')
def start_gad7(message):
    uid = message.from_user.id
    user_gad7_state[uid] = {'step': 0, 'answers': []}
    send_gad7_question(message.chat.id, uid)

# --- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ ---
def send_gad7_question(chat_id, uid):
    step = user_gad7_state[uid]['step']
    if step < len(gad7_questions):
        question = gad7_questions[step]
        markup = types.InlineKeyboardMarkup()
        for i in range(4):
            markup.add(types.InlineKeyboardButton(str(i), callback_data=f'gad7_{i}'))
        bot.send_message(chat_id, f"{step + 1}. {question}", reply_markup=markup)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ ---
@bot.callback_query_handler(func=lambda call: call.data.startswith("gad7_"))
def handle_gad7_answer(call):
    uid = call.from_user.id
    if uid not in user_gad7_state:
        return

    score = int(call.data.split('_')[1])
    user_gad7_state[uid]['answers'].append(score)
    user_gad7_state[uid]['step'] += 1
    bot.answer_callback_query(call.id)

    if user_gad7_state[uid]['step'] < len(gad7_questions):
        send_gad7_question(call.message.chat.id, uid)
    else:
        show_gad7_result(call.message.chat.id, uid)

# --- –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç ---
def show_gad7_result(chat_id, uid):
    total = sum(user_gad7_state[uid]['answers'])
    for minv, maxv, level in gad7_levels:
        if minv <= total <= maxv:
            desc = anxiety_descriptions[level]
            bot.send_message(
                chat_id,
                f"üß† *–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç (GAD-7)*: {total}/21\n"
                f"*–£—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏:* _{level}_\n\n"
                f"{desc}\n\n"
                "–°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω –∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –°—Ç–∞—Å—É @anxstas, –∏ –æ–Ω –æ—Ç–≤–µ—Ç–∏—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
                parse_mode="Markdown"
            )
            break

    # –ö–Ω–æ–ø–∫–∏ –≤ –∫–æ–Ω—Ü–µ
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add("üü° –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ -40%")
    markup.add("üè† –î–æ–º–æ–π")

    bot.send_message(
        chat_id,
        "üü° –≠—Ç–æ –º–æ–∂–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –≥–ª—É–±–∂–µ ‚Äî —Å–µ—Å—Å–∏—è-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å–æ —Å–∫–∏–¥–∫–æ–π 40% üëá",
        reply_markup=markup
    )

    # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_gad7_state.pop(uid, None)


# --- –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
user_phq9_state = {}

# --- –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ ---
@bot.message_handler(func=lambda msg: msg.text.strip() == 'üßû‚Äç‚ôÄÔ∏è –¢–µ—Å—Ç –¥–µ–ø—Ä–µ—Å—Å–∏–∏')
def start_phq9(message):
    uid = message.from_user.id
    user_phq9_state[uid] = {'step': 0, 'answers': []}
    send_phq9_question(message.chat.id, uid)

# --- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ ---
def send_phq9_question(chat_id, uid):
    step = user_phq9_state[uid]['step']
    if step < len(phq9_questions):
        question = phq9_questions[step]
        markup = types.InlineKeyboardMarkup()
        for i in range(4):
            markup.add(types.InlineKeyboardButton(str(i), callback_data=f'phq9_{i}'))
        bot.send_message(chat_id, f"{step + 1}. {question}", reply_markup=markup)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ ---
@bot.callback_query_handler(func=lambda call: call.data.startswith("phq9_"))
def handle_phq9_answer(call):
    uid = call.from_user.id
    if uid not in user_phq9_state:
        return

    score = int(call.data.split('_')[1])
    user_phq9_state[uid]['answers'].append(score)
    user_phq9_state[uid]['step'] += 1
    bot.answer_callback_query(call.id)

    if user_phq9_state[uid]['step'] < len(phq9_questions):
        send_phq9_question(call.message.chat.id, uid)
    else:
        show_phq9_result(call.message.chat.id, uid)

# --- –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ---
def show_phq9_result(chat_id, uid):
    total = sum(user_phq9_state[uid]['answers'])
    for minv, maxv, level in phq9_levels:
        if minv <= total <= maxv:
            desc = depression_descriptions[level]
            bot.send_message(
                chat_id,
                f"üß† *–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç (PHQ-9)*: {total}/27\n"
                f"*–£—Ä–æ–≤–µ–Ω—å –¥–µ–ø—Ä–µ—Å—Å–∏–∏:* _{level}_\n\n"
                f"{desc}\n\n"
                "–°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω –∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –°—Ç–∞—Å—É @anxstas, –∏ –æ–Ω –æ—Ç–≤–µ—Ç–∏—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
                parse_mode="Markdown"
            )
            break

    # –ö–Ω–æ–ø–∫–∏ –≤ –∫–æ–Ω—Ü–µ
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add("üü° –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ -40%")
    markup.add("üè† –î–æ–º–æ–π")

    bot.send_message(
        chat_id,
        "üü° –≠—Ç–æ –º–æ–∂–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –≥–ª—É–±–∂–µ ‚Äî —Å–µ—Å—Å–∏—è-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å–æ —Å–∫–∏–¥–∫–æ–π 40% üëá",
        reply_markup=markup
    )

    # –û—á–∏—Å—Ç–∫–∞
    user_phq9_state.pop(uid, None)


def social_links_keyboard():
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    tg_btn = types.InlineKeyboardButton("ü™∂ –ú–æ–π Telegram", url="https://t.me/domminside")
    yt_btn = types.InlineKeyboardButton("üì∫ –ú–æ–π YouTube", url="https://www.youtube.com/@anxstas")
    mu_btn = types.InlineKeyboardButton("üé∏ –ú–æ–π –ú—å—é–∑–∏–∫", url="https://www.youtube.com/watch?v=ABcng-PsR3E&list=PLpSP-UgtrTHazZ74PrlSCLLiK82LlPrMH&index=3&pp=gAQBiAQB8AUB")
    keyboard.add(tg_btn, yt_btn, mu_btn)
    return keyboard

@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(
        message.chat.id,
        """–ü—Ä–∏–≤–µ—Ç!

–Ø –∂–∏–≤–æ–π –±–æ—Ç –°—Ç–∞—Å–∞ –í–µ—Ä–µ—á—É–∫–∞, —Ç–µ—Ä–∞–ø–µ–≤—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞ ¬´–î–æ–º–æ–π, –∫ —Å–µ–±–µ –Ω–∞—Å—Ç–æ—è—â–µ–º—É¬ª. –•–æ—Ä–æ—à–æ, —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å.

–° —á–µ–≥–æ –Ω–∞—á–Ω—ë–º?

üü° –°–µ—Å—Å–∏—è-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å–æ —Å–∫–∏–¥–∫–æ–π 40%.

ü§ø –ü–æ–π—Ç–∏ –≥–ª—É–±–∂–µ ‚Äî —Ç–∞–º –µ—Å—Ç—å –≤–∞–∂–Ω–æ–µ –∏ –≥–ª—É–±–æ–∫–æ–µ –¥–ª—è —Ç–µ–±—è, –∞ –µ—â—ë —Ç–∞–º ‚Äî –¥–µ—Ç–∞–ª—å–Ω–µ–µ –æ –º–æ–µ–º —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–º –ø–æ–¥—Ö–æ–¥–µ. 

üÜò –°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å ‚Äî –µ—Å–ª–∏ —Å–µ–π—á–∞—Å —Å–æ–≤—Å–µ–º —Ç—è–∂–∫–æ.""",
        reply_markup=persistent_keyboard()
    )

    time.sleep(5)
    bot.send_message(
        message.chat.id,
        """üßû‚Äç‚ôÇÔ∏èüßû‚Äç‚ôÄÔ∏è –¢—ã –º–æ–∂–µ—à—å —Ç–∞–∫–∂–µ –ø—Ä–æ–π—Ç–∏ –¢–µ—Å—Ç—ã —Ç—Ä–µ–≤–æ–≥–∏ –∏–ª–∏ –¥–µ–ø—Ä–µ—Å—Å–∏–∏. –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ –±–æ–ª—å—à–µ 2 –º–∏–Ω—É—Ç. –£–≤–∏–¥–∏—à—å –ø—Ä–æ–±–ª–µ–º—ã - –∑–∞–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å–æ —Å–∫–∏–¥–∫–æ–π. –ù–µ –∏–≥–Ω–æ—Ä—å —Ç—Ä–µ–≤–æ–≥—É –∏ –¥–µ–ø—Ä–µ—Å—Å–∏—é - —ç—Ç–æ —Ç–≤–æ–∏ –¥–≤–µ—Ä–∏ –≤ –∂–∏–∑–Ω—å.""",
    )

    time.sleep(6)
    bot.send_message(
        message.chat.id,
        """–ê –∑–¥–µ—Å—å ‚§µÔ∏è 
        
–º–æ–π –∫–∞–Ω–∞–ª –≤ —Ç–µ–ª–µ–≥—Ä–∞–º (–æ —Ç—Ä–µ–≤–æ–≥–µ) –∏ —é—Ç—É–±, –≥–¥–µ –∏–¥–µ—Ç "–¢–æ—Å–∫–∞'–Ω–∞". –ê –µ—â–µ - —Ç–∞ —Å–∞–º–∞—è –ø–µ—Å–Ω—è, –Ω–∞–ø–∏—Å–∞–Ω–Ω–∞—è –≤ –ø–µ—Ä–∏–æ–¥ –ì–¢–† –∏ –¢–î–†, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—É—é —è –≤ —Ç–µ—á–µ–Ω–∏–µ –≥–æ–¥–∞ –ø—Ä–æ–∂–∏–≤–∞–ª –∏ –ø—Ä–∏–Ω–∏–º–∞–ª —Å–º–µ—Ä—Ç—å –ø–∞–ø—ã.""",
        reply_markup=social_links_keyboard()
    )

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == 'üü° –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ -40%')
def handle_booking(message):
    user_state.pop(message.from_user.id, None)  # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ª–æ–≥–∏–∫—É "—Å—Ä–æ—á–Ω–æ–π –ø–æ–º–æ—â–∏"
    human_delay()
    bot.send_message(
        message.chat.id,
        "–¢—ã —Å–¥–µ–ª–∞–ª –≤–∞–∂–Ω—ã–π —à–∞–≥ –∏ –ø–æ–∑–∞–±–æ—Ç–∏–ª—Å—è –æ —Å–µ–±–µ.\n\n"
        "–ü–µ—Ä–≤–∞—è —Å–µ—Å—Å–∏—è-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ –±—É–¥–µ—Ç —Å–æ —Å–∫–∏–¥–∫–æ–π 40% (30 –µ–≤—Ä–æ –≤–º–µ—Å—Ç–æ 50).\n\n"
        "–ù–∞ —Å–µ—Å—Å–∏–∏ —É —Ç–µ–±—è –±—É–¥–µ—Ç —Ç—ë–ø–ª–æ–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ. "
        "–¢–µ–±–µ –Ω–µ –Ω—É–∂–Ω–æ –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –Ω–µ–π, –º–æ–∂–µ—à—å –ø—Ä–∏–π—Ç–∏ –∏ –ø—Ä–æ—Å—Ç–æ –±—ã—Ç—å —Å–æ–±–æ–π.\n\n",
        reply_markup=persistent_keyboard()
    )

    slots = get_next_slots()
    markup = types.InlineKeyboardMarkup()
    for label, dt in slots:
        slot_id = dt.strftime('%Y-%m-%d_%H:%M')
        markup.add(types.InlineKeyboardButton(text=label, callback_data=f"slot_{slot_id}"))

    bot.send_message(message.chat.id, "üü° –í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω–æ–µ —Ç–µ–±–µ –≤—Ä–µ–º—è:", reply_markup=markup)
    bot.send_message(message.chat.id, "–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã ‚Äî –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –°—Ç–∞—Å—É –ª–∏—á–Ω–æ –Ω–∞ @anxstas")


@bot.callback_query_handler(func=lambda call: call.data.startswith("slot_"))
def handle_slot_choice(call):
    slot_raw = call.data.split("slot_")[1]
    user_selected_slots[call.from_user.id] = slot_raw
    dt_text = datetime.strptime(slot_raw, "%Y-%m-%d_%H:%M").strftime('%A %d %B ‚Ä¢ %H:%M')

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üí∞ –û–ø–ª–∞—Ç–∏—Ç—å", url="https://moneyyyyyy.carrd.co/"))
    markup.add(types.InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="paid_done"))

    bot.send_message(call.message.chat.id, f"–¢—ã –≤—ã–±—Ä–∞–ª: {dt_text}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø–∏—Å—å:", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == "paid_done")
def confirm_payment(call):
    user_id = call.from_user.id
    slot_str = user_selected_slots.get(user_id)
    if not slot_str:
        bot.send_message(call.message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è.")
        return

    username = call.from_user.username or "–Ω–µ—Ç username"
    dt = datetime.strptime(slot_str, "%Y-%m-%d_%H:%M")

    start = dt.strftime('%Y%m%dT%H%M00Z')
    end = (dt + timedelta(hours=1)).strftime('%Y%m%dT%H%M00Z')

    calendar_link = (
        f"https://www.google.com/calendar/render?action=TEMPLATE"
        f"&text=–°–µ—Å—Å–∏—è+—Å–æ+–°—Ç–∞—Å–æ–º"
        f"&dates={start}/{end}"
        f"&details=–ö–ª–∏–µ–Ω—Ç+–ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª+–æ–ø–ª–∞—Ç—É"
        f"&location=Telegram"
    )

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    dt_fmt = dt.strftime('%d %B %Y ‚Ä¢ %H:%M')
    admin_msg = (
        f"üöº –ó–∞–ø–∏—Å—å –Ω–∞ —Å–µ—Å—Å–∏—é!\n\n"
        f"üõü @{username} (id: {user_id})\n"
        f"üïò –í—Ä–µ–º—è: {dt_fmt}\n"
        f"üí± –°–ª–æ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω. –û–ø–ª–∞—Ç–∞?\n"
        f"üìÜ –î–æ–±–∞–≤–∏—Ç—å –≤ Google Calendar:\n{calendar_link}"
    )
    bot.send_message(ADMIN_ID, admin_msg)

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(call.message.chat.id, "–°–ø–∞—Å–∏–±–æ! –¢–≤–æ—è —Å–µ—Å—Å–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ üåø")

    # –ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∞—è –¥–∞—Ç–∞
    days = {
        "Monday": "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "Tuesday": "–≤—Ç–æ—Ä–Ω–∏–∫", "Wednesday": "—Å—Ä–µ–¥—É",
        "Thursday": "—á–µ—Ç–≤–µ—Ä–≥", "Friday": "–ø—è—Ç–Ω–∏—Ü—É", "Saturday": "—Å—É–±–±–æ—Ç—É", "Sunday": "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
    }
    months = {
        "January": "—è–Ω–≤–∞—Ä—è", "February": "—Ñ–µ–≤—Ä–∞–ª—è", "March": "–º–∞—Ä—Ç–∞",
        "April": "–∞–ø—Ä–µ–ª—è", "May": "–º–∞—è", "June": "–∏—é–Ω—è",
        "July": "–∏—é–ª—è", "August": "–∞–≤–≥—É—Å—Ç–∞", "September": "—Å–µ–Ω—Ç—è–±—Ä—è",
        "October": "–æ–∫—Ç—è–±—Ä—è", "November": "–Ω–æ—è–±—Ä—è", "December": "–¥–µ–∫–∞–±—Ä—è"
    }

    day_name = days[dt.strftime("%A")]
    day = dt.strftime("%d")
    month = months[dt.strftime("%B")]
    time = dt.strftime("%H:%M")
    human_date = f"{day_name}, {day} {month} –≤ {time}"

    bot.send_message(call.message.chat.id, "–í–æ—Ç —Å—Å—ã–ª–∫–∞, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å:")
    bot.send_message(call.message.chat.id, calendar_link)
    bot.send_message(call.message.chat.id, f"–ñ–¥—É —Ç–µ–±—è –≤ {human_date} ü§ó", reply_markup=persistent_keyboard())
    bot.send_message(call.message.chat.id, "–£—Å—Ç–∞–Ω–æ–≤–∏ –∑–∞—Ä–∞–Ω–µ–µ Google Meet –¥–ª—è —Å–≤—è–∑–∏, –ø–µ—Ä–µ–¥ —Å–µ—Å—Å–∏–µ–π —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤—Å—Ç—Ä–µ—á—É.")
    bot.send_message(call.message.chat.id, "–ê –ø–æ–∫–∞ —á—Ç–æ –∑–∞–≥–ª—è–Ω–∏ –≤ ¬´ü§ø –ü–æ–π—Ç–∏ –≥–ª—É–±–∂–µ¬ª üëá, —É –Ω–∞—Å —Ç–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ.")



def get_techniques_block():
    return (
        "–ü–æ–ø—Ä–æ–±—É–π —Å–µ–π—á–∞—Å —Å–¥–µ–ª–∞—Ç—å –≤–æ—Ç —ç—Ç–æ. –ù–∞–ø–æ–ª–Ω—É—é, –±–µ–∑ –∂–∞–ª–æ—Å—Ç–∏ –∫ —Å–µ–±–µ ‚Äî –∏ —Ç—Ä–µ–≤–æ–≥–∏ —Ç–æ—á–Ω–æ —Å—Ç–∞–Ω–µ—Ç –º–µ–Ω—å—à–µ:\n\n"
        "1. –î—ã—Ö–∞–Ω–∏–µ 4-7-8.\n"
        "–í–¥–æ—Ö 4 —Å–µ–∫, –ø–∞—É–∑–∞ 7 —Å–µ–∫, –≤—ã–¥–æ—Ö 8 —Å–µ–∫. –î–µ–ª–∞–π —Ç–∞–∫ 5 –º–∏–Ω—É—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–±–ª—é–¥–∞–π, –∫–∞–∫ –≤–æ–∑–¥—É—Ö –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –Ω–æ—Å –∏ –≥–ª—É–±–∂–µ.\n\n"
        "‚¨ú‚¨ú‚¨ú\n\n"
        "2. –í—ã–ø–∏—à–∏ –≤—Å—ë, —á—Ç–æ –≤–Ω—É—Ç—Ä–∏.\n"
        "–í—Å–µ —Å–≤–æ–∏ –º—ã—Å–ª–∏, –≤—Å—ë, —á—Ç–æ –ø–∞—Ä–∏—Ç ‚Äî –±–µ–∑ –∫—Ä–∏—Ç–∏–∫–∏, –±–µ–∑ –æ–±–¥—É–º—ã–≤–∞–Ω–∏—è. –ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ –≤—Å—ë –∫–∞–∫ –∏–¥—ë—Ç.\n\n"
        "‚¨ú‚¨ú‚¨ú\n\n"
        "3. –î–≤–∏–∂–µ–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤ —Ç—Ä–µ–≤–æ–≥–∏.\n"
        "–°–¥–µ–ª–∞–π 10 –æ—Ç–∂–∏–º–∞–Ω–∏–π, 20 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π ‚Äî –∏ —Ç–∞–∫ 3 –ø–æ–¥—Ö–æ–¥–∞. –ú–æ–∂–Ω–æ —Å–∏–ª—å–Ω–æ —É—Å—Ç–∞—Ç—å, –∏ —ç—Ç–æ —Ö–æ—Ä–æ—à–æ.\n\n"
        "‚¨ú‚¨ú‚¨ú\n\n"
        "4. –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ \"5-4-3-2-1\".\n"
        "–ù–∞–π–¥–∏: 5 –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–∏—à—å, 4 - –∫–æ—Ç–æ—Ä—ã–µ —Å–ª—ã—à–∏—à—å, 3 ‚Äî —Ç—Ä–æ–≥–∞–µ—à—å, 2 ‚Äî —á—É–≤—Å—Ç–≤—É–µ—à—å, 1 ‚Äî –º–æ–∂–µ—à—å —Å—ä–µ—Å—Ç—å.\n" 
        "–ò –≤ –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –≤—á—É–≤—Å—Ç–≤—É–π—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ. –†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–π –¥–æ –¥–µ—Ç–∞–ª–µ–π. –°–ª—É—à–∞–π –¥–æ —Ç–∏—à–∏–Ω—ã. –¢—Ä–æ–≥–∞–π –¥–æ –º—É—Ä–∞—à–µ–∫. –ß—É–≤—Å—Ç–≤—É–π –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã –∫–æ—Ç(—à–∫–∞). –ï—à—å –¥–æ —Å–ª—é–Ω–µ–∫.\n\n"
        "‚¨ú‚¨ú‚¨ú\n\n"
        "–•–æ—á–µ—à—å ‚Äî –º–æ–∂–Ω–æ –∑–∞–≥–ª—è–Ω—É—Ç—å –≤ —Ç–≤–æ—é —Ç—Ä–µ–≤–æ–≥—É –≥–ª—É–±–∂–µ —Å–æ –°—Ç–∞—Å–æ–º –Ω–∞ —Å–µ—Å—Å–∏–∏. –û–Ω –æ—á–µ–Ω—å –±–µ—Ä–µ–∂–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –¥–æ–º–æ–π ‚Äî –≤ —Å–≤–æ—é –Ω–∞—Å—Ç–æ—è—â–µ—Å—Ç—å.\n\n"
    )




@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == 'üÜò –°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å')
def handle_emergency(message):
    user_state.pop(message.from_user.id, None)
    uid = message.from_user.id
    user_state[uid] = 2  # —Å—Ä–∞–∑—É —Å—Ç–∞–≤–∏–º –Ω—É–∂–Ω—ã–π —ç—Ç–∞–ø

    # –û—Ç–≤–µ—Ç 1
    human_delay()
    bot.send_message(uid, "–¢—ã –∑–∞—à—ë–ª —Å—é–¥–∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫.")

    # –û—Ç–≤–µ—Ç 2
    human_delay()
    bot.send_message(uid, "–î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ —Å–¥–µ–ª–∞–µ–º —Ç–∞–∫, —á—Ç–æ–±—ã —Ç–µ–±–µ —Å—Ç–∞–ª–æ —Ö–æ—Ç—å —á—É—Ç–æ—á–∫—É –ª–µ–≥—á–µ.")

    # –û—Ç–≤–µ—Ç 3
    human_delay()
    bot.send_message(uid,
        "–†–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ —Å —Ç–æ–±–æ–π? –ò —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π, —Ç–µ–ø–ª–æ–º –∏ –¥–µ–π—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–∏–∫–∞–º–∏.\n\n"
        "–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ –º–Ω–µ –≤ —á–∞—Ç üëá –ü—Ä—è–º–æ —Å–µ–π—á–∞—Å, –±–µ–∑ –≤—Å—è–∫–∏—Ö –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π. –ß—Ç–æ —Ç–∞–º —Å —Ç–æ–±–æ–π? –ü–æ–¥–µ–ª–∏—Å—å...",
        reply_markup=persistent_keyboard()
    )

@bot.message_handler(func=lambda msg: user_state.get(msg.from_user.id) == 2)
def handle_emergency_reply(message):
    user_state.pop(message.from_user.id, None)
    uid = message.from_user.id
    human_delay()
    bot.send_message(uid, "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–µ–ª–∏—à—å—Å—è. –Ø —Ç–µ–±—è —Å–ª—ã—à—É. –¢–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤–∞–∂–Ω—ã–π, –∫–∞–∫ –∏ –≤—Å—ë, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å —Ç–æ–±–æ–π... –Ø —Å —Ç–æ–±–æ–π –≤ —ç—Ç–æ–º, –Ω–∞—Å–∫–æ–ª—å–∫–æ –º–æ–≥—É.")

    human_delay()
    bot.send_message(uid, "–•–æ—á–µ—à—å, –ø–µ—Ä–µ—à–ª–∏ –µ–≥–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –°—Ç–∞—Å—É –ª–∏—á–Ω–æ –Ω–∞ @anxstas ‚Äî –æ–Ω –æ—Ç–≤–µ—Ç–∏—Ç, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ—á–∏—Ç–∞–µ—Ç. –ü—Ä–æ—Å—Ç–æ —Å–∫–æ–ø–∏—Ä—É–π –∏ –æ—Ç–ø—Ä–∞–≤—å (–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Å–∫—Ä–∏–Ω—à–æ—Ç), –±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π, —è –µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂—É. –≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ.")

    human_delay()
    bot.send_message(uid, "–ò–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –ø–æ–±—É–¥–µ–º –≤ —ç—Ç–æ–º –Ω–µ–º–Ω–æ–≥–æ –≤–º–µ—Å—Ç–µ? –Ø –º–æ–≥—É –¥–∞—Ç—å —Ç–µ–±–µ —á—É—Ç–æ—á–∫—É —Ç–µ–ø–ª–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –±—ã—Å—Ç—Ä—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Å–Ω–∏–∂–µ–Ω–∏—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏.")

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2, one_time_keyboard=False)
    markup.add("‚ù§Ô∏è –¢–µ–ø–ª–æ", "üßò –¢–µ—Ö–Ω–∏–∫–∏", "üß∏ –ü–æ–¥–¥–µ—Ä–∂–∏ –º–µ–Ω—è", "üè† –î–æ–º–æ–π")
    bot.send_message(uid, "–í—ã–±–µ—Ä–∏ –≤–Ω–∏–∑—É üëá –ß—Ç–æ —Ç–µ–±–µ —Å–µ–π—á–∞—Å –±–ª–∏–∂–µ?", reply_markup=markup)

    user_state[uid] = 3


@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == '‚ù§Ô∏è –¢–µ–ø–ª–æ')
def handle_warmth(message):
    user_state.pop(message.from_user.id, None)
    bot.send_chat_action(message.chat.id, 'typing')
    time.sleep(random.uniform(2.0, 2.5))
    bot.send_message(message.chat.id, "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –≤ —Ç–µ–ø–ª–æ–º –∏ –º—è–≥–∫–æ–º –ø–ª–µ–¥–µ, —Ç–∞–∫–æ–º, –∏–∑ –¥–µ—Ç—Å—Ç–≤–∞, –ø—É—à–∏—Å—Ç–æ–º, –∑–∞ –æ–∫–Ω–æ–º –º–µ—Ä—Ü–∞–µ—Ç —Ç—ë–ø–ª—ã–π —Å–≤–µ—Ç, –∞ —Ä—è–¥–æ–º —Å —Ç–æ–±–æ–π ‚Äî –∫—Ç–æ-—Ç–æ –±–ª–∏–∑–∫–∏–π –∏ –æ—á–µ–Ω—å –∑–∞–±–æ—Ç–ª–∏–≤—ã–π. –¢–æ—Ç, –∫—Ç–æ –ª—é–±–∏—Ç —Ç–µ–±—è. –ò –Ω–∏–∫—É–¥–∞ –Ω–µ —Ç–æ—Ä–æ–ø–∏—Ç. –¢–µ–±–µ –Ω–∏–∫—É–¥–∞ –Ω–µ –Ω–∞–¥–æ –±–µ–∂–∞—Ç—å.")

    bot.send_chat_action(message.chat.id, 'typing')
    time.sleep(random.uniform(2.0, 2.4))
    bot.send_message(message.chat.id, "–¢–µ–±–µ –Ω–µ –Ω—É–∂–Ω–æ –Ω–∏—á–µ–≥–æ –¥–æ–∫–∞–∑—ã–≤–∞—Ç—å, –Ω–∏–∫—É–¥–∞ —Å–ø–µ—à–∏—Ç—å. –ü—Ä–æ—Å—Ç–æ –ø–æ–±—É–¥—å –≤ —ç—Ç–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ... –≤ —ç—Ç–æ–º –ø–ª–µ–¥–µ.")

    bot.send_chat_action(message.chat.id, 'typing')
    time.sleep(random.uniform(2.0, 2.4))
    bot.send_message(message.chat.id, "–¢—ã –∏–º–µ–µ—à—å –ø—Ä–∞–≤–æ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤—Å—ë, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å. –í—Å—ë, —á—Ç–æ —Å —Ç–æ–±–æ–π ‚Äî –∏–º–µ–µ—Ç —Å–º—ã—Å–ª –∏ –∑–Ω–∞—á–µ–Ω–∏–µ. –ò —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–±—ã—Ç—å —Ä—è–¥–æ–º —Ö–æ—Ç—è –±—ã –Ω–µ–º–Ω–æ–≥–æ.")

    bot.send_chat_action(message.chat.id, 'typing')
    time.sleep(random.uniform(2.0, 2.4))
    bot.send_message(message.chat.id, "–ï—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ –≤—Å—ë –∑–∞–ø—É—Ç–∞–Ω–æ ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –ü–æ–∑–≤–æ–ª—å —Å–µ–±–µ –±—ã—Ç—å —Å–µ–π—á–∞—Å –±–µ–∑ –æ—Ç–≤–µ—Ç–æ–≤, –±–µ–∑ —Ä–µ—à–µ–Ω–∏–π. –¢–µ–ø–ª–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–µ —Å –æ—Ç–≤–µ—Ç–∞–º–∏, –∞ —Å —Ç–µ–º, –∫—Ç–æ —Ä—è–¥–æ–º.")

    bot.send_chat_action(message.chat.id, 'typing')
    time.sleep(random.uniform(2.0, 2.4))
    bot.send_message(message.chat.id, "–ú–Ω–µ –≤–∞–∂–Ω–æ –±—ã—Ç—å —Ä—è–¥–æ–º —Å —Ç–æ–±–æ–π. –û–±–Ω–∏–º–∞—é —Ç–µ–±—è.")

    bot.send_chat_action(message.chat.id, 'typing')
    time.sleep(random.uniform(2.0, 2.5))
    bot.send_message(message.chat.id, "–•–æ—á–µ—à—å ‚Äî –º–æ–∂–Ω–æ –∑–∞–≥–ª—è–Ω—É—Ç—å –≤ —ç—Ç–æ –≥–ª—É–±–∂–µ —Å–æ –°—Ç–∞—Å–æ–º –Ω–∞ —Å–µ—Å—Å–∏–∏? –û–Ω –æ—á–µ–Ω—å –±–µ—Ä–µ–∂–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –¥–æ–º–æ–π ‚Äî –≤ —Å–≤–æ—é –Ω–∞—Å—Ç–æ—è—â–µ—Å—Ç—å.")

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add("üü° –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ -40%")
    markup.add("üë£ –î–∞–≤–∞–π –µ—â–µ —Ä–∞–∑–æ–∫?")
    bot.send_message(message.chat.id, "–ü—Ä–∏—Ö–æ–¥–∏ üíõüëá", reply_markup=markup)
    user_state[message.from_user.id] = 2

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == 'üßò –¢–µ—Ö–Ω–∏–∫–∏')
def handle_techniques(message):
    user_state.pop(message.from_user.id, None)

    bot.send_chat_action(message.chat.id, 'typing')
    time.sleep(random.uniform(2.0, 2.5))
    bot.send_message(message.chat.id, get_techniques_block())

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add("üü° –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ -40%")
    markup.add("üë£ –î–∞–≤–∞–π –µ—â–µ —Ä–∞–∑–æ–∫?")
    bot.send_message(message.chat.id, "–ü—Ä–∏—Ö–æ–¥–∏ üíõüëá", reply_markup=markup)
    user_state[message.from_user.id] = 2


@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == "üß∏ –ü–æ–¥–¥–µ—Ä–∂–∏ –º–µ–Ω—è")
def handle_support_me(message):
    user_state.pop(message.from_user.id, None)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=False)
    markup.add("üß∑ –ú–Ω–µ –Ω–∞–¥–æ –∑–∞ —á—Ç–æ-—Ç–æ –¥–µ—Ä–∂–∞—Ç—å—Å—è")
    markup.add("üí¨ –°–∫–∞–∂–∏ –º–Ω–µ, —á—Ç–æ —Å–æ –º–Ω–æ–π –≤—Å—ë –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
    markup.add("ü´† –ü—Ä–æ–≤–∞–ª–∏–≤–∞—é—Å—å")
    markup.add("‚è≥ –ú–Ω–µ —Å—Ç—Ä–∞—à–Ω–æ, —á—Ç–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å—Ç–∞–Ω–µ—Ç –ª–µ–≥—á–µ")
    markup.add("üè† –î–æ–º–æ–π")
    bot.send_message(
        message.chat.id,
        "–Ø —Ä—è–¥–æ–º. –í—ã–±–µ—Ä–∏, —á—Ç–æ –æ—Ç–∑—ã–≤–∞–µ—Ç—Å—è —Å–∏–ª—å–Ω–µ–µ –≤—Å–µ–≥–æ:",
        reply_markup=markup
    )



def human_typing_blocks(chat_id, text, min_d=1.1, max_d=2.4):
    blocks = text.strip().split("\n\n")
    for block in blocks:
        if block.strip():
            bot.send_chat_action(chat_id, 'typing')
            time.sleep(random.uniform(min_d, max_d))
            bot.send_message(chat_id, block)

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == "üß∑ –ú–Ω–µ –Ω–∞–¥–æ –∑–∞ —á—Ç–æ-—Ç–æ –¥–µ—Ä–∂–∞—Ç—å—Å—è")
def anchor_support(message):
    user_state.pop(message.from_user.id, None)
    text = (
        "–ò–Ω–æ–≥–¥–∞ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, —á—Ç–æ –º–æ–∂–Ω–æ ‚Äî —ç—Ç–æ –¥–µ—Ä–∂–∞—Ç—å—Å—è. –ó–∞ –¥—ã—Ö–∞–Ω–∏–µ. –ó–∞ –ø–ª–µ–¥. –ó–∞ –≤–∑–≥–ª—è–¥ –∫–æ—à–∫–∏. –ó–∞ –∑–≤—É–∫ —Å–≤–æ–µ–≥–æ –∏–º–µ–Ω–∏.\n\n"
        "üî∏ –ü–æ–ª–æ–∂–∏ —Ä—É–∫—É –Ω–∞ –≥—Ä—É–¥—å –∏ –ø–æ—á—É–≤—Å—Ç–≤—É–π, —á—Ç–æ —Ç—ã –¥—ã—à–∏—à—å. –≠—Ç–æ - –∂–∏–∑–Ω—å –≤–Ω—É—Ç—Ä–∏ —Ç–µ–±—è. –¢—ã –º–æ–∂–µ—à—å –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –µ–µ —Å –¥—ã—Ö–∞–Ω–∏–µ–º.\n"
        "üî∏ –¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è. –¢–∞–∫, –∫–∞–∫ –º–æ–∂–µ—à—å –Ω–∞ —Å–µ–π—á–∞—Å. –ò –Ω–∞ —Å–µ–π—á–∞—Å —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.\n\n" 
        "üî∏ –ü–æ—Å–º–æ—Ç—Ä–∏ –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º –∏ –Ω–∞–π–¥–∏ 3 –ø—Ä–µ–¥–º–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –±—ã –¥–∞—Ç—å —Ç–µ–±–µ —á—É–≤—Å—Ç–≤–æ –æ–ø–æ—Ä—ã.\n"
        "üî∏ –ù–∞–ø–∏—à–∏ —Å–µ–±–µ –Ω–∞ –±—É–º–∞–≥–µ: \"–Ø –∑–¥–µ—Å—å. –Ø –¥–µ—Ä–∂—É—Å—å. –Ø —Å–ø—Ä–∞–≤–ª—è—é—Å—å.\"\n\n"
        "–Ø —Å —Ç–æ–±–æ–π. –í—Å—ë, —á—Ç–æ —Ç—ã —Å–µ–π—á–∞—Å –ø–µ—Ä–µ–∂–∏–≤–∞–µ—à—å ‚Äî –Ω–µ –Ω–∞–≤—Å–µ–≥–¥–∞."
    )
    human_typing_blocks(message.chat.id, text)

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == "üí¨ –°–∫–∞–∂–∏ –º–Ω–µ, —á—Ç–æ —Å–æ –º–Ω–æ–π –≤—Å—ë –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
def reassurance_support(message):
    user_state.pop(message.from_user.id, None)
    messages = [
        "–° —Ç–æ–±–æ–π –≤—Å—ë –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –Ø –∑–Ω–∞—é, —á—Ç–æ –∏–Ω–æ–≥–¥–∞ —ç—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç —Å–æ–º–Ω–µ–Ω–∏—è, –Ω–æ —Ç–µ–±—è –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –Ω–∞—É—á–∏–ª–∏. –ê –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, —Å —Ç–æ–±–æ–π –≤—Å—ë –æ–∫. –ü–æ–ª–Ω–æ—Å—Ç—å—é. –Ø –∑–Ω–∞—é, —á—Ç–æ –≥–æ–≤–æ—Ä—é.\n\n"
        "–¢—ã –Ω–µ —Å–ª–æ–º–∞–Ω. –¢—ã –ø—Ä–æ—Å—Ç–æ –∂–∏–≤–æ–π. –ê –∂–∏–≤—ã–º –±—ã–≤–∞–µ—Ç –æ—á–µ–Ω—å –±–æ–ª—å–Ω–æ.\n\n"
        "–¢—ã –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–∏–ª—å–Ω—ã–º –≤—Å—ë –≤—Ä–µ–º—è. –ò–Ω–æ–≥–¥–∞ —Å–∏–ª—å–Ω—ã–π ‚Äî —ç—Ç–æ —Ç–æ—Ç, –∫—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∂–∏—Ç—å. –¢–∞–∫, –∫–∞–∫ —É –Ω–µ–≥–æ –Ω–∞ —Å–µ–π—á–∞—Å –≤—ã—Ö–æ–¥–∏—Ç.\n\n"
        "–¢—ã –Ω–µ –æ–±—è–∑–∞–Ω –±—ã—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º, –≤–µ—Å—ë–ª—ã–º –∏–ª–∏ –Ω—É–∂–Ω—ã–º. –¢—ã —É–∂–µ –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å –ª—é–±–≤–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—Ç–æ–º—É, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—à—å.\n\n"
        "–¢–æ, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–µ–Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞."
    ]
    import random
    human_typing_blocks(message.chat.id, random.choice(messages))

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == "ü´† –ü—Ä–æ–≤–∞–ª–∏–≤–∞—é—Å—å")
def collapse_support(message):
    user_state.pop(message.from_user.id, None)
    text = (
        "–ï—Å–ª–∏ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Ç—ã –ø—Ä–æ–≤–∞–ª–∏–≤–∞–µ—à—å—Å—è ‚Äî –∑–Ω–∞—á–∏—Ç, —Ç—ã –¥–æ–ª–≥–æ –¥–µ—Ä–∂–∞–ª—Å—è. –ò–Ω–æ–≥–¥–∞ —Ç–µ–ª–æ –∏ –ø—Å–∏—Ö–∏–∫–∞ –ø—Ä–æ—Å—Ç–æ —É—Å—Ç–∞—é—Ç.\n\n"
        "–¢—ã –∏–º–µ–µ—à—å –ø—Ä–∞–≤–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è. –õ–µ—á—å. –°–º–æ—Ç—Ä–µ—Ç—å –≤ –ø–æ—Ç–æ–ª–æ–∫. –ü—Ä–æ—Å—Ç–æ –±—ã—Ç—å. –°—Ç–æ–ª—å–∫–æ, —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ. –î–æ–ª–≥–æ. –ú–∏—Ä –Ω–µ —Ä—É—Ö–Ω–µ—Ç. –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ.\n\n"
        "üî∏ –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã ‚Äî –ø–æ–¥ –ø–ª–µ–¥–æ–º, –≤ –¥–æ–º–∏–∫–µ, –≥–¥–µ –Ω–∏–∫—Ç–æ –Ω–µ —Ç—Ä–æ–Ω–µ—Ç. –ú–æ–∂–µ—à—å —Ç–∞–º –æ—Å—Ç–∞—Ç—å—Å—è.\n"
        "üî∏ –î—ã—à–∏ –º–µ–¥–ª–µ–Ω–Ω–æ: –≤–¥–æ—Ö ‚Äî –Ω–∞ 4 —Å—á–µ—Ç–∞, –≤—ã–¥–æ—Ö ‚Äî –Ω–∞ 6. –ü–æ–≤—Ç–æ—Ä–∏ 5 —Ä–∞–∑.\n\n"
        "–¢—ã –Ω–µ –ª–µ–Ω–∏–≤—ã–π. –¢—ã –∏—Å—Ç–æ—â—ë–Ω. –≠—Ç–æ –¥—Ä—É–≥–æ–µ. –ò —ç—Ç–æ –ø—Ä–æ–π–¥—ë—Ç."
    )
    human_typing_blocks(message.chat.id, text)

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == "‚è≥ –ú–Ω–µ —Å—Ç—Ä–∞—à–Ω–æ, —á—Ç–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å—Ç–∞–Ω–µ—Ç –ª–µ–≥—á–µ")
def fear_of_forever(message):
    user_state.pop(message.from_user.id, None)
    text = (
        "–≠—Ç–æ—Ç —Å—Ç—Ä–∞—Ö ‚Äî —á–µ—Å—Ç–Ω—ã–π. –ö–∞–∂–µ—Ç—Å—è, –±—É–¥—Ç–æ —ç—Ç–æ '–Ω–∞–≤—Å–µ–≥–¥–∞'. –ù–æ –≤—Å—ë —Ç–µ—á—ë—Ç. –í—Å—ë –º–µ–Ω—è–µ—Ç—Å—è.\n\n"
        "üî∏ –¢—ã –Ω–µ –ø–µ—Ä–≤—ã–π, –∫—Ç–æ —ç—Ç–æ —á—É–≤—Å—Ç–≤—É–µ—Ç. –ò –≤—Å–µ, –∫—Ç–æ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª, –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —á–µ—Ä–µ–∑ —ç—Ç–æ.\n"
        "üî∏ –û—Ç–∫–∞—Ç ‚Äî –Ω–µ –∫–æ–Ω–µ—Ü. –≠—Ç–æ —á–∞—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞.\n\n"
        "üî∏ –î–∞–∂–µ –º—ã—Å–ª—å '—ç—Ç–æ –Ω–µ –Ω–∞–≤—Å–µ–≥–¥–∞' ‚Äî —É–∂–µ —à–∞–≥ –≤ —Å—Ç–æ—Ä–æ–Ω—É –Ω–∞–¥–µ–∂–¥—ã. –î–∞ –∏ —Å–∫–∞–∂–∏, –±—ã–ª–æ –±—ã –≤—Å—ë —ç—Ç–æ —Å —Ç–æ–±–æ–π, –µ—Å–ª–∏ –±—ã —Ç—ã –Ω–µ –º–æ–≥ —ç—Ç–æ –≤—ã–Ω–µ—Å—Ç–∏? –ú–∏—Ä –Ω–µ –¥–∞—ë—Ç –Ω–∞–º —Ç–æ–≥–æ, —Å —á–µ–º –º—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –Ω–µ –º–æ–∂–µ–º —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è.\n\n"
        "–Ø —Å —Ç–æ–±–æ–π. –ü–æ–¥—ã—à–∏–º?"
    )
    human_typing_blocks(message.chat.id, text)

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == "üè† –î–æ–º–æ–π")
def go_main_menu(message):
    user_state.pop(message.from_user.id, None)
    bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üåø", reply_markup=persistent_keyboard())

    # ü§ø –ü–æ–π—Ç–∏ –≥–ª—É–±–∂–µ ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ä–∞–∑–¥–µ–ª—ã
@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == 'ü§ø –ü–æ–π—Ç–∏ –≥–ª—É–±–∂–µ')
def handle_deeper(message):
    user_state.pop(message.from_user.id, None)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add("üßò –û –ø–æ–¥—Ö–æ–¥–µ ¬´–î–æ–º–æ–π, –∫ —Å–µ–±–µ –Ω–∞—Å—Ç–æ—è—â–µ–º—É¬ª")
    markup.add("üß© –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏", "üß∂ –ó–∞–±–æ—Ç–ª–∏–≤–æ—Å—Ç–∏")
    markup.add("üßû‚Äç‚ôÇÔ∏è –í—Å–µ —Ç–µ—Å—Ç—ã –¢", "üßû‚Äç‚ôÄÔ∏è –í—Å–µ —Ç–µ—Å—Ç—ã –î")
    markup.add("üõÅ –¢–µ—Å—Ç –≥–ª—É–±–∏–Ω—ã", "üê≥ –ï—â–µ –≥–ª—É–±–∂–µ")
    markup.add("üó£ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", "üè† –î–æ–º–æ–π")
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ üëá", reply_markup=markup)

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == 'üßò –û –ø–æ–¥—Ö–æ–¥–µ ¬´–î–æ–º–æ–π, –∫ —Å–µ–±–µ –Ω–∞—Å—Ç–æ—è—â–µ–º—É¬ª')
def about_method(message):
    user_state.pop(message.from_user.id, None)
    text = (
        "–ó–∞–≥–ª—è–Ω–∏ –∫ –Ω–∞–º –Ω–∞ —Å–∞–π—Ç, —Ç–∞–º —á—É—Ç—å –±–æ–ª—å—à–µ –æ –°—Ç–∞—Å–µ –í–µ—Ä–µ—á—É–∫–µ, –∏ –≤–∫—Ä–∞—Ç—Ü–µ –æ –µ–≥–æ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–º –ø–æ–¥—Ö–æ–¥–µ –ø–æ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—é —Ç—Ä–µ–≤–æ–≥–∏ –∏ –¥–µ–ø—Ä–µ—Å—Å–∏–∏.\n\n"
        "–ê –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –ø–æ–≥–ª—É–±–∂–µ, —Ç–æ –ø–æ—á–∏—Ç–∞–π –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –ø–æ–¥—Ö–æ–¥–∞."
    )
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("üåê –°–∞–π—Ç", url="https://anxstas.github.io/"),
        types.InlineKeyboardButton("üìñ –ö–æ–Ω—Ü–µ–ø—Ü–∏—è", url="https://page.genspark.site/page/toolu_01MDfAf2WCfQ9Bey23eeESjN/%D0%B4%D0%BE%D0%BC%D0%BE%D0%B9_%D0%BA_%D1%81%D0%B5%D0%B1%D0%B5_%D0%BD%D0%B0%D1%81%D1%82%D0%BE%D1%8F%D1%89%D0%B5%D0%BC%D1%83_%D1%84%D0%B8%D0%BD%D0%B0%D0%BB.html")
    )
    bot.send_message(message.chat.id, text, reply_markup=markup)
    bot.send_message(message.chat.id, "–ò –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=persistent_keyboard())

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == 'üó£ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å')
def handle_feedback_start(message):
    user_state.pop(message.from_user.id, None)
    user_state[message.from_user.id] = 'waiting_feedback'
    bot.send_message(
        message.chat.id,
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –≤—Å—ë, —á—Ç–æ –¥—É–º–∞–µ—à—å –æ –Ω—ë–º ‚Äî –æ–± —ç—Ç–æ–º –Ω–µ–∏–¥–µ–∞–ª—å–Ω–æ–º, –Ω–æ —Ç–æ—á–Ω–æ –∂–∏–≤–æ–º –∏ –Ω–∞—Å—Ç–æ—è—â–µ–º —á–µ–ª–æ–≤–µ–∫–µ.\n\n"
        "–û–Ω –±—É–¥–µ—Ç –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω —Ç–µ–±–µ –∑–∞ –∫–∞–∂–¥—É—é —Ç–≤–æ—é –±—É–∫–æ–≤–∫—É üåû.",
        reply_markup=types.ReplyKeyboardRemove()
    )

@bot.message_handler(func=lambda msg: user_state.get(msg.from_user.id) == 'waiting_feedback')
def handle_feedback_entry(message):
    uid = message.from_user.id
    user_state.pop(uid, None)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É
    bot.send_message(
        ADMIN_ID,
        f"üÜï –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {uid} (@{message.from_user.username}):\n\n{message.text}"
    )

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(
        message.chat.id,
        "–°–ø–∞—Å–∏–±–æ, —è –ø–æ–ª—É—á–∏–ª —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ. –û–Ω–æ —É–∂–µ –≤ –Ω–∞–¥—ë–∂–Ω—ã—Ö —Ä—É–∫–∞—Ö üíõ",
        reply_markup=persistent_keyboard()
    )

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == 'üß∂ –ó–∞–±–æ—Ç–ª–∏–≤–æ—Å—Ç–∏')
def cute_stuff(message):
    user_state.pop(message.from_user.id, None)
    user_state[message.from_user.id] = 'cute_menu'

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2, one_time_keyboard=False)
    markup.add("ü©µ –ß—Ç–æ —è —á—É–≤—Å—Ç–≤—É—é", "ü´ß –ú–æ—Ä–µ —Ç–∏—à–∏–Ω—ã")
    markup.add("üìö –Ø ‚Äî –¥–Ω–µ–≤–Ω–∏–∫", "üè† –î–æ–º–æ–π")

    bot.send_message(
        message.chat.id,
        "–¢—É—Ç –º–æ–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ –ø–æ–∑–∞–±–æ—Ç–∏—Ç—å—Å—è üíõ\n\n–í—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –¥–ª—è —Å–µ–±—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å üëá",
        reply_markup=markup
    )

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == 'ü´ß –ú–æ—Ä–µ —Ç–∏—à–∏–Ω—ã')
def handle_sea_of_silence(message):
    user_state.pop(message.from_user.id, None)

            # –ì–∏—Ñ–∫–∞ —Å –º–æ—Ä–µ–º
    bot.send_chat_action(message.chat.id, 'upload_video')
    bot.send_animation(
        message.chat.id,
        animation='https://media.giphy.com/media/3o6Zt481isNVuQI1l6/giphy.gif',  # –º—è–≥–∫–∞—è, —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â–∞—è –≥–∏—Ñ–∫–∞
    )

    bot.send_chat_action(message.chat.id, 'typing')
    bot.send_message(
        message.chat.id,
        "–¢—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–¥–æ. –ü—Ä–æ—Å—Ç–æ —Ç–∏—à–∏–Ω–∞, –¥—ã—Ö–∞–Ω–∏–µ –∏ —Ç—ã. –ò –µ—â–µ –∫–æ—Ç.\n\n"
    )

            # –ö–Ω–æ–ø–∫–∏ —Å —à—É–º–∞–º–∏
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üéß –®—É–º –¥–æ–∂–¥—è", url="https://www.rainymood.com/"))
    markup.add(types.InlineKeyboardButton("üåø –ó–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥—ã", url="https://asoftmurmur.com/"))
    markup.add(types.InlineKeyboardButton("üßò –Ø –ø—Ä–æ—Å—Ç–æ —Ö–æ—á—É –∑–¥–µ—Å—å –ø–æ–±—ã—Ç—å", callback_data='just_be_here'))

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å:", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'just_be_here')
def handle_just_be_here(call):
    bot.send_chat_action(call.message.chat.id, 'typing')
    time.sleep(1.5)
    bot.send_message(
        call.message.chat.id,
    "–ë—É–¥—å –∑–¥–µ—Å—å, —Å–∫–æ–ª—å–∫–æ –∑–∞—Ö–æ—á–µ—à—å.\n\n–ú–µ—Å—Ç–æ –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è ‚Äî —Å–∞–º–æ–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –ó–µ–º–ª–µ. –ó–∞—á–∞—Å—Ç—É—é –æ–Ω–æ –∏—Å–ø–µ—â—Ä–µ–Ω–æ —Ä–∞–Ω–∞–º–∏, –Ω–æ –æ—Ç —ç—Ç–æ–≥–æ –æ–Ω–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –µ—â–µ –∏ –æ—á–µ–Ω—å-–æ—á–µ–Ω—å —Ü–µ–Ω–Ω—ã–º. –ù–µ–ø–æ—Ö–æ–∂–∏–º –Ω–∏ –Ω–∞ –∫–æ–≥–æ –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º. –ò –æ–Ω–æ —Ç–∞–∫ —Ö–æ—á–µ—Ç —Ç–≤–æ–µ–π –∑–∞–±–æ—Ç—ã. –ü–æ–≤—Ç—ã–∫–∞–π –Ω–∞ —ç—Ç–æ–≥–æ –∫–æ—Ç–∞, —É –Ω–µ–≥–æ —Ç–æ—á–Ω–æ –º–æ–∂–Ω–æ –ø–æ—É—á–∏—Ç—å—Å—è üíõ"
    )
    
@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == 'üìö –Ø ‚Äî –¥–Ω–µ–≤–Ω–∏–∫')
def handle_diary_start(message):
    user_state.pop(message.from_user.id, None)
    user_state[message.from_user.id] = 'waiting_diary_entry'
    bot.send_chat_action(message.chat.id, 'typing')
    time.sleep(1.5)
    bot.send_message(
        message.chat.id,
        "–•–æ—á–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å, —á—Ç–æ —Å–µ–π—á–∞—Å –≤–Ω—É—Ç—Ä–∏?\n\n–ú–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä—è–º–æ —Å—é–¥–∞. –ê —è –ø—Ä–æ—Å—Ç–æ –ø–æ–±—É–¥—É —Ä—è–¥–æ–º."
    )


@bot.message_handler(func=lambda msg: user_state.get(msg.from_user.id) == 'waiting_diary_entry')
def handle_diary_entry(message):
    user_state.pop(message.from_user.id, None)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
    with open('diary_entries.txt', 'a', encoding='utf-8') as f:
        f.write(
            f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} ‚Äî user {message.from_user.id}:\n{message.text.strip()}\n\n"
        )

    bot.send_chat_action(message.chat.id, 'typing')
    time.sleep(1)
    bot.send_message(
        message.chat.id,
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è. –≠—Ç–æ –≤–∞–∂–Ω–æ.\n–¢–≤–æ–∏ —Å–ª–æ–≤–∞ –∑–¥–µ—Å—å –Ω–∞–≤—Å–µ–≥–¥–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. üíõ"
    )

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == 'ü©µ –ß—Ç–æ —è —á—É–≤—Å—Ç–≤—É—é')
def handle_emotional_radar(message):
    user_state.pop(message.from_user.id, None)
    user_state[message.from_user.id] = 'emotion_wait'

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2, one_time_keyboard=False)
    markup.add(
        "üòä –†–∞–¥–æ—Å—Ç—å", "üòü –¢—Ä–µ–≤–æ–≥–∞", "üò¢ –ì—Ä—É—Å—Ç—å",
        "üò† –ó–ª–æ—Å—Ç—å", "üò± –°—Ç—Ä–∞—Ö", "üòî –°—Ç—ã–¥",
        "ü§¢ –û—Ç–≤—Ä–∞—â–µ–Ω–∏–µ", "‚öñÔ∏è –í–∏–Ω–∞",
        "üè† –î–æ–º–æ–π"
    )

    bot.send_message(
        message.chat.id,
        "–ß—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–π—á–∞—Å?\n–í—ã–±–µ—Ä–∏ –æ–¥–Ω–æ ‚Äî –∏ –º—ã –ø–æ–±—É–¥–µ–º –≤ —ç—Ç–æ–º –≤–º–µ—Å—Ç–µ üíõ",
        reply_markup=markup
    )


@bot.message_handler(func=lambda msg: user_state.get(msg.from_user.id) == 'emotion_wait')
def respond_to_emotion(message):
    feeling = message.text.strip().lower()
    user_state.pop(message.from_user.id, None)

    responses = {
        "üòä —Ä–∞–¥–æ—Å—Ç—å": (
            "–ö–∞–∫–æ–π –∂–µ —ç—Ç–æ –∫–∞–π—Ñ - —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–∞–¥–æ—Å—Ç—å üíõ –ì–¥–µ –æ–Ω–∞ —É —Ç–µ–±—è –≤ —Ç–µ–ª–µ? –ü–æ—Å—Ç–∞—Ä–∞–π—Å—è —ç—Ç–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å.\n\n"
            "üî∏ –ê –¥–∞–≤–∞–π –¥–∞–¥–∏–º –µ–π —á—É—Ç—å –±–æ–ª—å—à–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞?\n\n"
            "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ –æ–Ω–∞ ‚Äî –Ω–µ —á—É–≤—Å—Ç–≤–æ, –∞ –≤–µ—â–µ—Å—Ç–≤–æ. –ß—Ç–æ, –µ—Å–ª–∏ —ç—Ç–æ ‚Äî —Å–≤–µ—Ç, –≥—É—Å—Ç–æ–π –º—ë–¥, —Ç–µ–ø–ª–∞—è –≤–∞–Ω–Ω–∞, –º—É–∑—ã–∫–∞ –ø–∏–∞–Ω–∏–Ω–æ?\n\n"
            "üåø –°–¥–µ–ª–∞–π –≤–¥–æ—Ö ‚Äî –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Å –Ω–∏–º —Ä–∞–¥–æ—Å—Ç—å —Ä–∞—Å—Ç–µ–∫–∞–µ—Ç—Å—è —á—É—Ç—å –¥–∞–ª—å—à–µ.\n"
            "–°–¥–µ–ª–∞–π –≤—ã–¥–æ—Ö ‚Äî –∏ –ø–æ–∑–≤–æ–ª—å –µ–π –æ—Å—Ç–∞—Ç—å—Å—è, –Ω–µ —É–ª–µ—Ç–∞—è.\n\n"
            "üíõ –°–ø—Ä–æ—Å–∏ —Å–µ–±—è: ‚Äì –ß—Ç–æ –æ–Ω–∞ —Ö–æ—á–µ—Ç –º–Ω–µ —Å–∫–∞–∑–∞—Ç—å?\n"
            "–ö—É–¥–∞ –≤ –∂–∏–∑–Ω–∏ –º–Ω–µ —Å—Ç–æ–∏—Ç –µ—ë –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å?\n\n"
            "–ü—Ä–∏—Ö–æ–¥–∏, –µ—Å–ª–∏ –µ—â–µ –∑–∞—Ö–æ—á–µ—à—å. –Ø –±—É–¥—É –∑–¥–µ—Å—å."
        ),
        "üòü —Ç—Ä–µ–≤–æ–≥–∞": (
            "–Ø —Ä—è–¥–æ–º. –¢—Ä–µ–≤–æ–≥–∞ ‚Äî —ç—Ç–æ –Ω–µ –≤—Ä–∞–≥. –≠—Ç–æ —Å–∏–≥–Ω–∞–ª –æ —Ç–æ–º, —á—Ç–æ —Ç–µ–±–µ –≤–∞–∂–Ω–æ –≤ –±—É–¥—É—â–µ–º, –∏ –µ—Å—Ç—å —Ä–∏—Å–∫. –ß—Ç–æ —Ç–∞–º —Ç–µ–±—è —Ç–∞–∫ —Ç—è–Ω–µ—Ç? –í —á–µ–º —Ä–∏—Å–∫?\n\n"
            "üî∏ –ü–æ–ø—Ä–æ–±—É–π: –≤–¥–æ—Ö–Ω–∏ –Ω–∞ 4 —Å—á–µ—Ç–∞, –∑–∞–¥–µ—Ä–∂–∏ –¥—ã—Ö–∞–Ω–∏–µ –µ—â–µ –Ω–∞ 4, –∞ –≤—ã–¥–æ—Ö–Ω–∏ –Ω–∞ 6. –ü–æ–≤—Ç–æ—Ä–∏ 10 —Ä–∞–∑.\n"
            "–≠—Ç–æ –¥–∞—Å—Ç —Ç–µ–ª—É —Å–∏–≥–Ω–∞–ª: '–≤—Å—ë –±–µ–∑–æ–ø–∞—Å–Ω–æ'.\n\n"
            "–ú–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –ø–æ–∑–∂–µ, –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å."
        ),
        "üò¢ –≥—Ä—É—Å—Ç—å": (
            "–ì—Ä—É—Å—Ç—å –±—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –º—ã —á—Ç–æ-—Ç–æ —Ç–µ—Ä—è–µ–º. –î–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –±—ã–ª–æ –≤–æ–æ–±—Ä–∞–∂–∞–µ–º–æ–µ. –ò–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –∫–∞–∫ –Ω–∞–º —Ö–æ—á–µ—Ç—Å—è. –Ø —Ä—è–¥–æ–º.\n\n"
            "üî∏ –û–±–Ω–∏–º–∏ —Å–µ–±—è —Ä—É–∫–∞–º–∏, –∑–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞ –∏ –ø–æ–±—É–¥—å —Ç–∞–∫ 2 –º–∏–Ω—É—Ç—ã.\n"
            "–≠—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –∫–æ—Ç–æ—Ä–æ–π –º—ã —á–∞—Å—Ç–æ –Ω–µ–¥–æ–ø–æ–ª—É—á–∞–µ–º. –ì—Ä—É—Å—Ç—å –æ—á–µ–Ω—å –≤–∞–∂–Ω–∞, –Ω–µ –ø–æ–≥—Ä—É—Å—Ç–∏–≤, –º—ã –Ω–µ –º–æ–∂–µ–º –ø–æ–π—Ç–∏ –¥–∞–ª—å—à–µ\n\n"
            "–•–æ—á–µ—à—å ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è, —è –±—É–¥—É —Ç—É—Ç."
        ),
        "üò† –∑–ª–æ—Å—Ç—å": (
            "–ó–ª–æ—Å—Ç—å ‚Äî —ç–Ω–µ—Ä–≥–∏—è. –û–Ω–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥—Ä–∞–Ω–∏—Ü—ã. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ç—ã —Å –Ω–µ–π.\n\n"
            "üî∏ –í–æ–∑—å–º–∏ –ª–∏—Å—Ç –±—É–º–∞–≥–∏ –∏ –Ω–∞–ø–∏—à–∏ –Ω–∞ –Ω—ë–º –≤—Å—ë, –Ω–∞ —á—Ç–æ –∑–ª–∏—à—å—Å—è. –ù–µ –ø–æ–¥–±–∏—Ä–∞—è —Å–ª–æ–≤.\n"
            "–ü–æ—Ç–æ–º –º–æ–∂–µ—à—å –ø–æ—Ä–≤–∞—Ç—å. –ê –º–æ–∂–µ—à—å - —Å–∂–µ—á—å.\n\n"
            "–≠—Ç–æ –≤–∞–∂–Ω–æ –ø—Ä–æ–∂–∏—Ç—å. –Ø —Ä—è–¥–æ–º, –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è."
        ),
        "üò± —Å—Ç—Ä–∞—Ö": (
            "–°—Ç—Ä–∞—Ö ‚Äî —Å–∏–≥–Ω–∞–ª, —á—Ç–æ —Ç–µ–±–µ —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –∏ –µ—Å—Ç—å —Ä–∏—Å–∫. –¢—ã –∂–∏–≤–æ–π, –∏ —Ç—ã –∑–∞–±–æ—Ç–∏—à—å—Å—è –æ —Å–µ–±–µ. –ß—Ç–æ —Ç–µ–±–µ —Ç–∞–∫ –≤–∞–∂–Ω–æ?\n\n"
            "üî∏ –ü–æ–ø—Ä–æ–±—É–π: —Å—è–¥—å, –ø–æ—á—É–≤—Å—Ç–≤—É–π –æ–ø–æ—Ä—É –ø–æ–¥ —Å–æ–±–æ–π, —Å–∫–∞–∂–∏ –≤—Å–ª—É—Ö: *–Ø –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.*\n"
            "–ü–æ–¥—ã—à–∏ –≥–ª—É–±–æ–∫–æ. –ü–æ—á—É–≤—Å—Ç–≤—É–π, –∫–∞–∫ —Ç—ã –¥—ã—à–∏—à—å. –í—Å–ø–æ–º–Ω–∏ –æ —Ç–æ–º, —á—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –æ—Ç —Å—Ç—Ä–∞—Ö–∞ - —ç—Ç–æ –º—É–∂–µ—Å—Ç–≤–æ.\n\n"
            "–ï—Å–ª–∏ –≤–µ—Ä–Ω—ë—à—å—Å—è ‚Äî —è –±—É–¥—É —Ä—è–¥–æ–º."
        ),
        "üòî —Å—Ç—ã–¥": (
            "–°—Ç—ã–¥ ‚Äî —ç—Ç–æ –ø—Ä–æ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –±—ã—Ç—å –ø—Ä–∏–Ω—è—Ç—ã–º. –¢—ã –Ω–µ –æ–¥–∏–Ω –≤ —ç—Ç–æ–º. –Ø —Ç–æ–∂–µ –º–Ω–æ–≥–æ –∏ —á–∞—Å—Ç–æ —Å—Ç—ã–¥–∏–ª—Å—è. –ò –¥–æ —Å–∏—Ö –ø–æ—Ä —è –≤ —ç—Ç–æ–º –∏–Ω–æ–≥–¥–∞.\n\n"
            "üî∏ –ù–∞–ø–∏—à–∏ —Å–µ–±–µ: *–Ø –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ö–æ—Ä–æ—à–∏–π, –¥–∞–∂–µ —Å —ç—Ç–∏–º —á—É–≤—Å—Ç–≤–æ–º.*\n"
            "–ü—Ä–æ—Å—Ç–æ –ø—Ä–æ—á—Ç–∏ —ç—Ç–æ 3 —Ä–∞–∑–∞ –≤—Å–ª—É—Ö. –≠—Ç–æ —É–∂–µ –º–Ω–æ–≥–æ.\n\n"
            "–ó–∞—Ö–æ—á–µ—à—å ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è."
        ),
        "ü§¢ –æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ": (
            "–û—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –≥–æ–≤–æ—Ä–∏—Ç: *—ç—Ç–æ –Ω–µ –º–æ—ë*, *—è –Ω–µ —Ö–æ—á—É –±—ã—Ç—å —Å —ç—Ç–∏–º —Ä—è–¥–æ–º*.\n\n"
            "üî∏ –ú–æ–∂–µ—à—å –±—É–∫–≤–∞–ª—å–Ω–æ –æ—Ç—Ç–æ–ª–∫–Ω—É—Ç—å —ç—Ç–æ –∂–µ—Å—Ç–æ–º. –¢–æ–ª–∫–Ω–∏ —ç—Ç–æ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–æ –æ—Ç–ª–µ—Ç–µ–ª–æ –ø–æ–¥–∞–ª—å—à–µ. –ò–ª–∏ –Ω–∞—Ä–∏—Å—É–π –∏ –≤—ã–±—Ä–æ—Å—å. –° –±–∞–ª–∫–æ–Ω–∞. –ó–∞—à–≤—ã—Ä–Ω—É–≤ –∫–∞–∫ —Å–ª–µ–¥—É–µ—Ç.\n"
            "–≠—Ç–æ ‚Äî –≥—Ä–∞–Ω–∏—Ü–∞. –û–Ω–∞ –≤–∞–∂–Ω–∞.\n\n"
            "–Ø –∑–¥–µ—Å—å, –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –µ—â—ë."
        ),
        "‚öñÔ∏è –≤–∏–Ω–∞": (
            "–ó–¥–æ—Ä–æ–≤–∞—è –≤–∏–Ω–∞ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –æ —Ç–æ–º, —á—Ç–æ —Ç–µ–±–µ –≤–∞–∂–Ω—ã –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∏–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏. –≠—Ç–æ —á—É–≤—Å—Ç–≤–æ —á–∞—Å—Ç–æ –¥–∞—ë—Ç —à–∞–Ω—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á—Ç–æ-—Ç–æ —Ü–µ–Ω–Ω–æ–µ. –ß—Ç–æ —Ü–µ–Ω–Ω–æ –¥–ª—è —Ç–µ–±—è?\n\n"
            "üî∏ –ù–∞–ø–∏—à–∏ —Å–µ–±–µ —Ñ—Ä–∞–∑—É ‚Äî *–Ø —Å–¥–µ–ª–∞–ª(–∞) –æ—à–∏–±–∫—É, –Ω–æ —è - –Ω–µ –æ—à–∏–±–∫–∞.*\n"
            "–ó–∞—Ç–µ–º –ø–æ–¥—É–º–∞–π: —á—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å —Å–µ–π—á–∞—Å, —á—Ç–æ–±—ã –ø–æ–π—Ç–∏ –≤ —Å—Ç–æ—Ä–æ–Ω—É —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π?\n\n"
            "–Ø —Ä—è–¥–æ–º. –¢—ã –Ω–µ –æ–¥–∏–Ω –≤ —ç—Ç–æ–º."
        ),
    }

    response = responses.get(feeling)
    if response:
        bot.send_message(message.chat.id, response, reply_markup=persistent_keyboard())
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å. –í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ —ç–º–æ—Ü–∏–π –Ω–∏–∂–µ üíõ")


@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == 'üß© –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏')
def resources(message):
    user_state.pop(message.from_user.id, None)
    text = (
        "–¢—É—Ç - –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ –Ω–∞ –≤–∞–∂–Ω—ã–µ —Ç—Ä–µ–≤–æ–∂–Ω–æ-–¥–µ–ø—Ä–µ—Å—Å–∏–≤–Ω—ã–µ —Ç–µ–º—ã.\n\n"
        "–Ø –±—É–¥—É —Ä–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å—Ä–µ–¥–∏ —Å–≤–æ–∏—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤. –¢–æ–ª—å–∫–æ —Ç–∞–∫ —è —Å–º–æ–≥—É —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –¥–∞–≤–∞—Ç—å –ª—é–¥—è–º –±–æ–ª—å—à–µ –ø–æ–ª—å–∑—ã.\n\n"
        "‚ñ∂Ô∏è YouTube –æ —Ç—Ä–µ–≤–æ–≥–µ –∏ –¥–µ–ø—Ä–µ—Å—Å–∏–∏ (–∏ —á—É—Ç—å-—á—É—Ç—å –ª–∏—á–Ω–æ–≥–æ)\n\n"
        "üì∏ Instagram –æ —Ç—Ä–µ–≤–æ–≥–µ –∏ –¥–µ–ø—Ä–µ—Å—Å–∏–∏ (–∏ –ø–æ–±–æ–ª—å—à–µ –ª–∏—á–Ω–æ–≥–æ)\n\n"
        "ü™∂ Telegram –æ —Ç—Ä–µ–≤–æ–≥–µ –∏ –¥–µ–ø—Ä–µ—Å—Å–∏–∏ (–∏ —á—É—Ç—å-—á—É—Ç—å –Ω–∞—É–∫–∏)\n\n"
        "üé∏ –ú–æ—è –º—É–∑—ã–∫–∞, –≥–¥–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–ª—å–±–æ–º –∏ —á–∞—Å—Ç—å –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞–ø–∏—Å–∞–Ω—ã –≤ –º–æ–∏—Ö –ì–¢–† –∏ –¢–î–†\n\n"
        "üê° Facebook ‚Äî –≥–¥–µ –ª–∏—á–Ω–æ–µ, –∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Ç—Ä–µ–≤–æ–≥–µ –∏ –¥–µ–ø—Ä–µ—Å—Å–∏–∏\n\n"
        "üìΩ –ú–æ–∏ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ—Ö –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö –≤ 2017-2020"
    )
    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton("‚ñ∂Ô∏è –ú–æ–π YouTube", url="https://www.youtube.com/@anxstas"),
        types.InlineKeyboardButton("üì∏ –ú–æ—è Insta", url="https://www.instagram.com/verechuk_/"),
        types.InlineKeyboardButton("ü™∂ –ú–æ–π Telegram", url="https://www.t.me/domminside"),
        types.InlineKeyboardButton("üé∏ –ú–æ–π –ú—å—é–∑–∏–∫", url="https://soundcloud.com/joneser99"),
        types.InlineKeyboardButton("üê° –ú–æ–π Facebook", url="https://www.facebook.com/stanislav.verechuk/"),
        types.InlineKeyboardButton("üìΩ –ú–æ–∏ –í–∏–¥–µ–æ", url="https://www.youtube.com/playlist?list=PLpSP-UgtrTHazZ74PrlSCLLiK82LlPrMH")
    )
    bot.send_message(message.chat.id, text, reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "üßû‚Äç‚ôÇÔ∏è –í—Å–µ —Ç–µ—Å—Ç—ã –¢")
def handle_all_anxiety_tests(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add("GAD-7 (Generalized Anxiety Disorder)")
    markup.add("BAI (Beck Anxiety Inventory)")
    markup.add("STAI (Spielberger State-Trait Anxiety Inventory)")
    markup.add("üè† –î–æ–º–æ–π")
    bot.send_message(message.chat.id, "üßû‚Äç‚ôÇÔ∏è –¢–µ—Å—Ç—ã –Ω–∞ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "üßû‚Äç‚ôÄÔ∏è –í—Å–µ —Ç–µ—Å—Ç—ã –î")
def handle_all_depression_tests(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add("PHQ-9 (Patient Health Questionnaire)")
    markup.add("BDI-II (Beck Depression Inventory II)") 
    markup.add("HADS (Hospital Anxiety and Depression Scale)")
    markup.add("CES-D (Center for Epid Stud Depression Scale)")
    markup.add("üè† –î–æ–º–æ–π")
    bot.send_message(message.chat.id, "üßû‚Äç‚ôÄÔ∏è –¢–µ—Å—Ç—ã –Ω–∞ –¥–µ–ø—Ä–µ—Å—Å–∏—é:", reply_markup=markup)


# --- –ó–∞–≥–ª—É—à–∫–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã –¥–ª—è –Ω–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤ ---

@bot.message_handler(func=lambda message: message.text.startswith("GAD-7"))
def redirect_to_gad7(message):
    bot.send_message(message.chat.id, "üìå –í—ã –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –∫ —Ç–µ—Å—Ç—É GAD-7.")
    handle_gad7_start(message)  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É–∂–µ –µ—Å—Ç—å

@bot.message_handler(func=lambda message: message.text.startswith("PHQ-9"))
def redirect_to_phq9(message):
    bot.send_message(message.chat.id, "üìå –í—ã –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –∫ —Ç–µ—Å—Ç—É PHQ-9.")
    handle_phq9_start(message)  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É–∂–µ –µ—Å—Ç—å



# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ "–ö–∞–∫–æ–π —Ç—ã –ø–µ–ª—å–º–µ–Ω—å" –∏–∑ –≤–µ—Ç–∫–∏ "–ü–æ–π—Ç–∏ –≥–ª—É–±–∂–µ"
@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == "üõÅ –¢–µ—Å—Ç –≥–ª—É–±–∏–Ω—ã")
def start_dumpling_test(message):
    uid = message.from_user.id
    user_state[uid] = {'dumpling_test': 0, 'score': {'classic': 0, 'fried': 0, 'vegan': 0}}
    ask_dumpling_question(message.chat.id, uid)


dumpling_questions = [
    {
        'q': """–ë–ª–∞–≥–æ–¥–∞—Ä—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—é –¢–µ—Å—Ç–∞ –≥–ª—É–±–∏–Ω—ã "ü•ü –ö–∞–∫–æ–π —Ç—ã –ø–µ–ª—å–º–µ–Ω—å?" —Ç—ã —Å–º–æ–∂–µ—à—å –ø—Ä–∏–∫–æ—Å–Ω—É—Ç—å—Å—è –∫ –Ω–µ–≤–∏–¥–∞–Ω–Ω—ã–º –¥–æ—Å–µ–ª–µ –≥–ª—É–±–∏–Ω–∞–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏, –±–æ–ª–µ–µ —Ç–æ–Ω–∫–æ –æ—Ç—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–π –ø–µ–ª—å–º–µ–Ω–Ω—ã–π –∞—Ä—Ö–µ—Ç–∏–ø, —á—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∫—Ä—É–≥ —Å–≤–æ–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –∞–¥–∞ –≥–æ—Ä–∞–∑–¥–æ —Ä–∞–Ω—å—à–µ —Ç–≤–æ–∏—Ö –±–ª–∏–∂–∞–π—à–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.

–ü–æ–µ—Ö–∞–ª–∏ üçñ

1. –ö–∞–∫ —Ç—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º?

A. –í–∞—Ä—é—Å—å –≤ —Å–µ–±–µ, –ø–æ–∫–∞ –Ω–µ –≤–∑–æ—Ä–≤—É—Å—å

B. –ñ–∞—Ä—é –≤—Å–µ—Ö –≤–æ–∫—Ä—É–≥, –≤–∫–ª—é—á–∞—è —Å–µ–±—è

C. –ó–∞–º–∏—Ä–∞—é –∏ –ª–µ–∂—É –≤ –º–æ—Ä–æ–∑–∏–ª–∫–µ""",
        'a': [
            ("A", 'classic'),
            ("B", 'fried'),
            ("C", 'vegan')
        ]
    },
    {
        'q': "2. –ß—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–µ –ø–µ–ª—å–º–µ–Ω–µ–π?\n\nA. –ö—É–ø–∞—é—Å—å –≤ —Å–º–µ—Ç–∞–Ω–µ, —Ö–æ—á—É –∫–æ –≤—Å–µ–º, –Ω–æ –∏–º –º–µ–Ω—è –Ω–µ –ø–æ–Ω—è—Ç—å\n\nB. –Ø –∂–∞—Ä—é –Ω–∞ —Ç–∞–Ω—Ü–ø–æ–ª–µ, –±—É–ª—å–∫–∞—é –æ—Ç –∫–∞–π—Ñ–∞ –∏ —Ñ–ª–∏—Ä—Ç—É—é —Å –≤–∞—Ä–µ–Ω–∏–∫–∞–º–∏\n\nC. –°–∏–∂—É —É –±—É–ª—å–æ–Ω–Ω–æ–≥–æ —à–æ—Ç–∞, –±–æ–ª—Ç–∞—é —Å –¥–≤—É–º—è –Ω–∞–¥—ë–∂–Ω—ã–º–∏ –ø–µ–ª—å–º–µ–Ω—è–º–∏",
        'a': [
            ("A", 'vegan'),
            ("B", 'fried'),
            ("C", 'classic')
        ]
    },
    {
        'q': "3. –ß—Ç–æ –¥–ª—è —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—á–µ—Ä?\n\nA. –†–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω–æ –ø–µ—Ä–µ–≤–∞—Ä–∏–≤–∞—Ç—å—Å—è –≤ –∫–∞—Å—Ç—Ä—é–ª–µ —Ç–∏—à–∏–Ω—ã\n\nB. –≠–∫—à–Ω, –¥—Ä–∞–π–≤, –≤—ã–ø—Ä—ã–≥–Ω—É—Ç—å —Å–æ —Å–∫–æ–≤–æ—Ä–æ–¥–∫–∏ –Ω–∞ –ø–æ–ª, —á—Ç–æ–±—ã –≤—Å–µ –æ—Ö—Ä–µ–Ω–µ–ª–∏\n\nC. –°–∏–∂—É –≤ –º–æ—Ä–æ–∑–∏–ª–∫–µ, –Ω–∏–∫–æ–º—É –Ω–µ –º–µ—à–∞—é, —Å–ª—É—à–∞—é –∫–∏—Ç–æ–≤ –∏ —á–∏—Ç–∞—é –æ —Å–º—ã—Å–ª–µ —Ç–µ—Å—Ç–∞",
        'a': [
            ("A", 'classic'),
            ("B", 'fried'),
            ("C", 'vegan')
        ]
    },
    {
        'q': "4. –ö–∞–∫ —Ç—ã –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ –±–ª–∏–∑–æ—Å—Ç–∏?\n\nA. –°—Ä–∞–∑—É —Å–ª–∏–ø–∞—é—Å—å —Å –±–ª–∏–∂–∞–π—à–∏–º –ø–µ–ª—å–º–µ–Ω–µ–º\n\nB. –•–æ—á—É —Å–ª–∏–ø–Ω—É—Ç—å—Å—è, –Ω–æ –±–æ—é—Å—å, –∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –≤—ã–ª–µ–∑—Ç–∏ –∏–∑ —Ç–µ—Å—Ç–∞ –∏ –±–æ–ª—Ç–∞—Ç—å—Å—è —Å–∞–º –≤ –±—É–ª—å–±–∞—à–∫–∞—Ö\n\nC. –Ø –≥–æ—Ä–¥—ã–π –æ–¥–∏–Ω–æ–∫–∏–π –ø–µ–ª—å–º–µ–Ω—å, –º–Ω–µ –Ω–∞—Ö –Ω–∏–∫—Ç–æ –Ω–µ –Ω—É–∂–µ–Ω",
        'a': [
            ("A", 'fried'),
            ("B", 'classic'),
            ("C", 'vegan')
        ]
    },
    {
        'q': "5. –ß—Ç–æ —Ç–µ–±—è —Å –±–æ–ª—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –≤—ã–±—å–µ—Ç –∏–∑ –∫–æ–ª–µ–∏?\n\nA. –ö–æ–≥–¥–∞ –Ω–∞—Ä—É—à–∞—é—Ç —Ç–≤–æ–π —Å–≤—è—â–µ–Ω–Ω—ã–π —Å–æ—É—Å-—Ä–∞—Å–ø–æ—Ä—è–¥–æ–∫\n\nB. –ö–æ–≥–¥–∞ —Ç—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è —Ñ–æ–Ω–æ–º –≤ —á—É–∂–æ–º TikTok'–µ\n\nC. –ö–æ–≥–¥–∞ —Ç–µ–±—è —Å—É—é—Ç –≤ –º–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫—É –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
        'a': [
            ("A", 'classic'),
            ("B", 'vegan'),
            ("C", 'fried')
        ]
    },
    {
        'q': "6. –ö–∞–∫–∞—è —É —Ç–µ–±—è —Å—É–ø–µ—Ä—Å–∏–ª–∞ –∫–∞–∫ —É –ø–µ–ª—å–º–µ–Ω—è?\n\nA. –Ø —É–º–µ—é –ø—Ä–∏—Ç–≤–æ—Ä–∏—Ç—å—Å—è –∏—Å–ø–æ—Ä—á–µ–Ω–Ω—ã–º, –µ—Å–ª–∏ –Ω–µ —Ö–æ—á—É –∏–¥—Ç–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É\n\nB. –Ø –º–æ–≥—É –∏—Å—á–µ–∑–Ω—É—Ç—å —Å —Ç–∞—Ä–µ–ª–∫–∏, –µ—Å–ª–∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ —Ç–æ–∫—Å–∏—á–Ω–∞—è\n\nC. –Ø –º–æ–≥—É —Ä–∞—Å–∫—Ä—É—Ç–∏—Ç—å —Ç—É—Å–æ–≤–∫—É –¥–∞–∂–µ –≤ –º–æ—Ä–æ–∑–∏–ª–∫–µ\n\nD. –Ø –º–æ–≥—É —É–∫–∞—Ç–∞—Ç—å –ª—é–±–æ–≥–æ. –î–∞–∂–µ —Ç–æ–≥–æ, –∫—Ç–æ '–Ω–µ –≥–æ–ª–æ–¥–µ–Ω'\n\nE. –Ø –ø–µ—Ä–µ–∂–∏–ª –∫–∏–ø—è—Ç–æ–∫, —Å–∫–æ–≤–æ—Ä–æ–¥–∫—É –∏ —à–∫–æ–ª—å–Ω—É—é —Å—Ç–æ–ª–æ–≤–∫—É. –Ø –±–µ—Å—Å–º–µ—Ä—Ç–µ–Ω\n\nF. –Ø –º–æ–≥—É –∑–∞–∫—Ä—É—Ç–∏—Ç—å —Ç–∞–∫—É—é —Å–æ—É—Å-–¥—Ä–∞–º—É, —á—Ç–æ –ø—Ä–æ –≥–∞—Ä–Ω–∏—Ä –≤—Å–µ –∑–∞–±—É–¥—É—Ç",
        'a': [
            ("A", 'vegan'),
            ("B", 'vegan'),
            ("C", 'fried'),
            ("D", 'classic'),
            ("E", 'classic'),
            ("F", 'fried')
        ]
    }
]


def ask_dumpling_question(chat_id, uid):
    step = user_state[uid]['dumpling_test']
    if step < len(dumpling_questions):
        qdata = dumpling_questions[step]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
        for label, _ in qdata['a']:
            markup.add(label)
        bot.send_message(chat_id, qdata['q'], reply_markup=markup)
    else:
        interpret_dumpling_result(chat_id, uid)


@bot.message_handler(func=lambda msg: user_state.get(msg.from_user.id, {}).get('dumpling_test') is not None)
def handle_dumpling_answer(message):
    uid = message.from_user.id
    step = user_state[uid]['dumpling_test']
    qdata = dumpling_questions[step]
    selected = message.text.strip()

    for label, category in qdata['a']:
        if selected == label:
            user_state[uid]['score'][category] += 1
            break

    user_state[uid]['dumpling_test'] += 1
    ask_dumpling_question(message.chat.id, uid)


def interpret_dumpling_result(chat_id, uid):
    scores = user_state[uid]['score']
    result = max(scores, key=scores.get)

    if result == 'classic':
        desc = (
            "ü•ü –¢—ã ‚Äî –ü–µ–ª—å–º–µ–Ω—å-–ö–ª–∞—Å—Å–ò–∫.\n\n"
            "–¢—ã ‚Äî –æ–ø–ª–æ—Ç –±—É–ª—å–æ–Ω–∞. –£—é—Ç–Ω—ã–π, —Å—Ç–∞–±–∏–ª—å–Ω—ã–π, —Å —É–∫—Ä–æ–ø—á–∏–∫–æ–º.\n"
            "–¢—ã –Ω–µ –∏—â–µ—à—å —Å–æ—É—Å–∞ ‚Äî —Ç—ã –∏ –µ—Å—Ç—å —Å–æ—É—Å. –õ—é–¥–∏ —Ç—è–Ω—É—Ç—Å—è –∫ —Ç–µ–±–µ, –∫–æ–≥–¥–∞ —Ö–æ—á–µ—Ç—Å—è —á–µ–≥–æ-—Ç–æ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ.\n"
            "–ò–Ω–æ–≥–¥–∞ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å —Å–µ–±—è —Å–∫—É—á–Ω—ã–º. –ù–æ —Ç—ã ‚Äî —Ä–µ–¥–∫–∏–π –≤–∏–¥ —Ç–µ–ø–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –∫–∏–ø—è—Ç–∏—Ç—Å—è, –∞ –Ω–∞—Å—Ç–∞–∏–≤–∞–µ—Ç—Å—è.\n\n"
            "‚ú® –ê—Ñ—Ñ–∏—Ä–º–∞—Ü–∏—è: –Ø –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Å—Ç—Ä—ã–º, —á—Ç–æ–±—ã –±—ã—Ç—å —Ü–µ–Ω–Ω—ã–º. –Ø ‚Äî —Ç–µ–ø–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–µ —Å—Ä–∞–∑—É, –Ω–æ –æ—Å—Ç–∞—ë—Ç—Å—è –Ω–∞–¥–æ–ª–≥–æ."
        )
    elif result == 'fried':
        desc = (
            "üî• –¢—ã ‚Äî –ü–µ–ª—å–º–µ–Ω—å-–§–ª–µ–∫—Å–µ—Ä.\n\n"
            "–¢—ã ‚Äî –æ–≥–æ–Ω—å. RHCP –≤ –º–∏—Ä–µ –ø–µ–ª—å–º–µ–Ω–µ–π. –ö–æ–≥–¥–∞ —Ç—ã –≤—Ö–æ–¥–∏—à—å –≤ —Å–∫–æ–≤–æ—Ä–æ–¥–∫—É, –≤—Å—è –∫—É—Ö–Ω—è –∑–Ω–∞–µ—Ç.\n"
            "–¢—ã —Ñ–ª–µ–∫—Å–∏—à—å, –∏—Å—á–µ–∑–∞–µ—à—å, –æ–±–∂–∏–≥–∞–µ—à—å ‚Äî –Ω–æ –ø–æ–¥ —Ö—Ä—É—Å—Ç–æ–º —Å–∫—Ä—ã—Ç–∞ –º—è–≥–∫–æ—Å—Ç—å.\n"
            "–¢—ã –¥—Ä–∞–º–∞—Ç–∏—á–µ–Ω, –±–ª–∏—Å—Ç–∞–µ—à—å –∏ —É–º–µ–µ—à—å –¥–µ–ª–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–Ω—ã–µ –≤—ã—Ö–æ–¥—ã.\n\n"
            "‚ú® –ê—Ñ—Ñ–∏—Ä–º–∞—Ü–∏—è: –Ø –Ω–µ –¥–ª—è –≤—Å–µ—Ö ‚Äî –∏ —ç—Ç–æ –º–æ–π —Å–æ—É—Å. –Ø –æ–±–∂–∏–≥–∞—é, –≤–µ–¥—å —è –∂–∏–≤—É –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ."
        )
    else:
        desc = (
            "üå± –¢—ã ‚Äî –ü–µ–ª—å–º–µ–Ω—å-–°–æ–∑–µ—Ä—Ü–∞—Ç–µ–ª—å.\n\n"
            "–¢—ã ‚Äî –∑–∞–≥–∞–¥–∫–∞ –≤ –º–æ—Ä–æ–∑–∏–ª–∫–µ. –ñ–∞–Ω-–ü–æ–ª—å –°–∞—Ä—Ç—Ä, –ö—å–µ—Ä–∫–µ–≥–æ—Ä. –ù–µ–ø–æ—Ö–æ–∂–∏–π, –≥–ª—É–±–æ–∫–∏–π, –Ω–µ –¥–ª—è –≤—Å–µ—Ö.\n"
            "–¢—ã –Ω–µ –ª–µ–∑–µ—à—å –Ω–∞—Ä—É–∂—É ‚Äî —Ç—ã –Ω–∞–±–ª—é–¥–∞–µ—à—å. –¢—ã —É—Ö–æ–¥–∏—à—å –≤ —Å–µ–±—è –∏ —Å–ª—É—à–∞–µ—à—å –∫–∏—Ç–æ–≤.\n"
            "–¢—ã ‚Äî –∫—É–ª—å—Ç—É—Ä–Ω–æ–µ —è–≤–ª–µ–Ω–∏–µ –≤ —Ç–µ—Å—Ç–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–Ω–∏–º–∞—é—Ç –Ω–µ —Å—Ä–∞–∑—É, –Ω–æ –Ω–∞–¥–æ–ª–≥–æ.\n\n"
            "‚ú® –ê—Ñ—Ñ–∏—Ä–º–∞—Ü–∏—è: –Ø –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–ø–µ—à–∏—Ç—å, –ª–µ–∑—Ç—å –∏–∑ —Ç–µ—Å—Ç–∞ –≤–æ–Ω –∏ —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å —Å –±—É–±–Ω–æ–º, —á—Ç–æ–±—ã –±—ã—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–º.\n–ú–æ—è –≥–ª—É–±–∏–Ω–∞ ‚Äî –Ω–µ –¥–ª—è –º–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∏."
        )

    bot.send_message(chat_id, desc, reply_markup=persistent_keyboard())

@bot.message_handler(func=lambda msg: msg.text and msg.text.strip() == "üê≥ –ï—â–µ –≥–ª—É–±–∂–µ")
def handle_even_deeper(message):
    user_state.pop(message.from_user.id, None)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add("–î–ê ‚ù§Ô∏è", "–î–ê üíõ", "–î–ê üíö")
    bot.send_message(
        message.chat.id,
        "–•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ \"–ì–ª–∞–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å –∂–∏–∑–Ω–∏, –í—Å–µ–ª–µ–Ω–Ω–æ–π –∏ –≤—Å–µ–≥–æ —Ç–∞–∫–æ–≥–æ?\"",
        reply_markup=markup
    )


@bot.message_handler(func=lambda msg: msg.text in ["–î–ê ‚ù§Ô∏è", "–î–ê üíõ", "–î–ê üíö"])
def handle_ultimate_answer(message):
    user_state.pop(message.from_user.id, None)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add("üè† –î–æ–º–æ–π")
    bot.send_message(
        message.chat.id,
        "–¢–æ–≥–¥–∞ –¥–µ—Ä–∂–∏ üêæ\n\n–û–¢–í–ï–¢: 42\n\n–≠—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –≤–µ–∫–∞–º–∏ –∂–¥–∞–ª–∏ –≤—Å–µ —Ä–∞–∑—É–º–Ω—ã–µ —Ä–∞—Å—ã, –≤–µ–¥—å –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã–ª —Ä–µ—à–∏—Ç—å –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –í—Å–µ–ª–µ–Ω–Ω–æ–π. –¢–µ–ø–µ—Ä—å –≤—Å–µ –≤ —Ç–≤–æ–∏—Ö —Ä—É–∫–∞—Ö. –ù–µ –ø—Ä–æ–≤—Ç—ã–∫–∞–π —ç—Ç–æ—Ç —à–∞–Ω—Å üíõ",
        reply_markup=markup
    )


@bot.message_handler(func=lambda msg: msg.text not in [
    'üü° –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Å—Å–∏—é-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ -40%',
    'ü§ø –ü–æ–π—Ç–∏ –≥–ª—É–±–∂–µ',
    'üÜò –°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å',
    'üßò –û –ø–æ–¥—Ö–æ–¥–µ ¬´–î–æ–º–æ–π, –∫ —Å–µ–±–µ –Ω–∞—Å—Ç–æ—è—â–µ–º—É¬ª',
    'üß© –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏',
    'üß∂ –ó–∞–±–æ—Ç–ª–∏–≤–æ—Å—Ç–∏',
    'üõÅ –¢–µ—Å—Ç –≥–ª—É–±–∏–Ω—ã'
    'üê≥ –ï—â–µ –≥–ª—É–±–∂–µ',
    'üó£ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å',
    'üè† –î–æ–º–æ–π'
])

    
@bot.message_handler(commands=['–∑–∞–≤–µ—Ä—à–∏—Ç—å','end'])
def finish_chat(message):
    bot.send_message(message.chat.id, "üåø –°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ. –ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è ‚Äî —è —Ä—è–¥–æ–º.", reply_markup=persistent_keyboard())
    user_state.pop(message.from_user.id, None)


    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")

@app.route(f"/bot{TELEGRAM_TOKEN}", methods=["POST"])
def webhook():
    if request.method == "POST":
        update = telebot.types.Update.de_json(request.get_json())
        bot.process_new_updates([update])
    return "ok", 200

if __name__ == "__main__":
    print(">>> –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook:", f"{WEBHOOK_URL}/bot{TELEGRAM_TOKEN}")
    bot.remove_webhook()
    bot.set_webhook(url=f"{WEBHOOK_URL}/bot{TELEGRAM_TOKEN}")
    app.run(host="0.0.0.0", port=WEBHOOK_PORT)
